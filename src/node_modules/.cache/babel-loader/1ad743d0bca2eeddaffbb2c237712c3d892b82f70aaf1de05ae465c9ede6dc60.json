{"ast":null,"code":"var _jsxFileName = \"/Users/jason/bizchina/src/pages/DashboardScreen/CreateBoardModal.js\",\n  _s = $RefreshSig$();\n// import { Dialog, Stack, Typography, Box, IconButton } from '@mui/material'\n// // import CloseIcon from \"@mui/icons-material/Close\";\n\n// const CreateBoardModal = () => {\n//     return (\n//         <Dialog open fullWidth maxWidth='xs'>\n//             <Stack p={2}>\n//                 <Stack direction='row'>\n//                     <Typography variant='h5'>Create Board</Typography>\n//                     <IconButton size='small'>\n//                         {/* <CloseIcon/> */}\n//                         X\n//                     </IconButton>\n//                 </Stack>\n//             </Stack>\n//         </Dialog>\n//     )\n// }\n\n// export default CreateBoardModal\n\nimport { useState } from \"react\";\nimport { Dialog, Stack, Typography, Box, TextField, Button } from \"@mui/material\";\nimport ModalHeader from \"../../components/layout/ModalHeader\";\nimport { colors } from \"../../theme\";\nimport useApp from \"../../hooks/useApp\";\nimport useStore from \"../../store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateBoardModal = ({\n  closeModal\n}) => {\n  _s();\n  const {\n    createBoard\n  } = useApp();\n  const [name, setName] = useState(\"\");\n  const [color, setColor] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const {\n    setToastr\n  } = useStore();\n  const handleCreate = async () => {\n    const tName = name.trim();\n    if (!tName) return setToastr(\"You need to enter board name\");\n    if (!/^[a-zA-Z0-9\\s]{1,20}$/.test(tName)) return setToastr(\"Board name cannot contain special characters and should not be more than 20 chars\");\n    try {\n      setLoading(true);\n      await createBoard({\n        name: tName,\n        color\n      });\n      closeModal();\n    } catch (err) {\n      setLoading(false);\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: true,\n    onClose: closeModal,\n    fullWidth: true,\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      p: 2,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        onClose: closeModal,\n        title: \"Create Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        my: 5,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          value: name,\n          onChange: e => setName(e.target.value),\n          label: \"Board name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 1.5,\n          direction: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Color: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), colors.map((clr, idx) => /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              cursor: \"pointer\",\n              border: color === idx ? \"3px solid #383838\" : \"none\",\n              outline: `2px solid ${clr}`\n            },\n            onClick: () => setColor(idx),\n            height: 25,\n            width: 25,\n            backgroundColor: clr,\n            borderRadius: \"50%\"\n          }, clr, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: loading,\n        onClick: handleCreate,\n        variant: \"contained\",\n        size: \"large\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateBoardModal, \"QZRacnI6hlgMdccOiC6ijzypasU=\", false, function () {\n  return [useApp, useStore];\n});\n_c = CreateBoardModal;\nexport default CreateBoardModal;\nvar _c;\n$RefreshReg$(_c, \"CreateBoardModal\");","map":{"version":3,"names":["useState","Dialog","Stack","Typography","Box","TextField","Button","ModalHeader","colors","useApp","useStore","jsxDEV","_jsxDEV","CreateBoardModal","closeModal","_s","createBoard","name","setName","color","setColor","loading","setLoading","setToastr","handleCreate","tName","trim","test","err","console","log","open","onClose","fullWidth","maxWidth","children","p","title","fileName","_jsxFileName","lineNumber","columnNumber","my","spacing","value","onChange","e","target","label","direction","map","clr","idx","sx","cursor","border","outline","onClick","height","width","backgroundColor","borderRadius","disabled","variant","size","_c","$RefreshReg$"],"sources":["/Users/jason/bizchina/src/pages/DashboardScreen/CreateBoardModal.js"],"sourcesContent":["// import { Dialog, Stack, Typography, Box, IconButton } from '@mui/material'\n// // import CloseIcon from \"@mui/icons-material/Close\";\n\n// const CreateBoardModal = () => {\n//     return (\n//         <Dialog open fullWidth maxWidth='xs'>\n//             <Stack p={2}>\n//                 <Stack direction='row'>\n//                     <Typography variant='h5'>Create Board</Typography>\n//                     <IconButton size='small'>\n//                         {/* <CloseIcon/> */}\n//                         X\n//                     </IconButton>\n//                 </Stack>\n//             </Stack>\n//         </Dialog>\n//     )\n// }\n\n// export default CreateBoardModal\n\nimport { useState } from \"react\";\nimport {\n  Dialog,\n  Stack,\n  Typography,\n  Box,\n  TextField,\n  Button,\n} from \"@mui/material\";\nimport ModalHeader from \"../../components/layout/ModalHeader\";\nimport { colors } from \"../../theme\";\nimport useApp from \"../../hooks/useApp\";\nimport useStore from \"../../store\";\n\nconst CreateBoardModal = ({ closeModal }) => {\n  const { createBoard } = useApp();\n  const [name, setName] = useState(\"\");\n  const [color, setColor] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const { setToastr } = useStore();\n\n  const handleCreate = async () => {\n    const tName = name.trim();\n    if (!tName) return setToastr(\"You need to enter board name\");\n    if (!/^[a-zA-Z0-9\\s]{1,20}$/.test(tName))\n      return setToastr(\n        \"Board name cannot contain special characters and should not be more than 20 chars\"\n      );\n    try {\n      setLoading(true);\n      await createBoard({ name: tName, color });\n      closeModal();\n    } catch (err) {\n      setLoading(false);\n      console.log(err);\n    }\n  };\n\n  return (\n    <Dialog open onClose={closeModal} fullWidth maxWidth=\"xs\">\n      <Stack p={2}>\n        <ModalHeader onClose={closeModal} title=\"Create Board\" />\n        <Stack my={5} spacing={3}>\n          <TextField\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            label=\"Board name\"\n          />\n          <Stack spacing={1.5} direction=\"row\">\n            <Typography>Color: </Typography>\n\n            {colors.map((clr, idx) => (\n              <Box\n                sx={{\n                  cursor: \"pointer\",\n                  border: color === idx ? \"3px solid #383838\" : \"none\",\n                  outline: `2px solid ${clr}`,\n                }}\n                onClick={() => setColor(idx)}\n                key={clr}\n                height={25}\n                width={25}\n                backgroundColor={clr}\n                borderRadius=\"50%\"\n              />\n            ))}\n          </Stack>\n        </Stack>\n        <Button\n          disabled={loading}\n          onClick={handleCreate}\n          variant=\"contained\"\n          size=\"large\"\n        >\n          Create\n        </Button>\n      </Stack>\n    </Dialog>\n  );\n};\n\nexport default CreateBoardModal;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
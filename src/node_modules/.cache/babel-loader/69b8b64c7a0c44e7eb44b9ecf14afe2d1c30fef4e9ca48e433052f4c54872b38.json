{"ast":null,"code":"var _jsxFileName = \"/Users/jason/bizchina/src/dashboard/components/Task.tsx\",\n  _s = $RefreshSig$();\nimport { DeleteIcon } from '@chakra-ui/icons';\nimport { Box, IconButton, ScaleFade } from '@chakra-ui/react';\nimport _ from 'lodash';\nimport React, { memo } from 'react';\nimport { useTaskDragAndDrop } from '../hooks/useTaskDragAndDrop.ts';\nimport { AutoResizeTextarea } from './AutoResizeTextArea.tsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Task({\n  index,\n  task,\n  onUpdate: handleUpdate,\n  onDropHover: handleDropHover,\n  onDelete: handleDelete\n}) {\n  _s();\n  const {\n    ref,\n    isDragging\n  } = useTaskDragAndDrop({\n    task,\n    index: index\n  }, handleDropHover);\n  const handleTitleChange = e => {\n    const newTitle = e.target.value;\n    handleUpdate(task.id, {\n      ...task,\n      title: newTitle\n    });\n  };\n  const handleDeleteClick = () => {\n    handleDelete(task.id);\n  };\n  return /*#__PURE__*/_jsxDEV(ScaleFade, {\n    in: true,\n    unmountOnExit: true,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      ref: ref,\n      as: \"div\",\n      role: \"group\",\n      position: \"relative\",\n      rounded: \"lg\",\n      w: 200,\n      pl: 3,\n      pr: 7,\n      pt: 3,\n      pb: 1,\n      boxShadow: \"xl\",\n      cursor: \"grab\",\n      fontWeight: \"bold\",\n      userSelect: \"none\",\n      bgColor: task.color,\n      opacity: isDragging ? 0.5 : 1,\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        zIndex: 100,\n        \"aria-label\": \"delete-task\",\n        size: \"md\",\n        colorScheme: \"solid\",\n        color: 'gray.700',\n        icon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this),\n        opacity: 0,\n        _groupHover: {\n          opacity: 1\n        },\n        onClick: handleDeleteClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AutoResizeTextarea, {\n        value: task.title,\n        fontWeight: \"semibold\",\n        cursor: \"inherit\",\n        border: \"none\",\n        p: 0,\n        resize: \"none\",\n        minH: 70,\n        maxH: 200,\n        focusBorderColor: \"none\",\n        color: \"gray.700\",\n        onChange: handleTitleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Task, \"8G80F1EgAopJminIW2J4igvyUeU=\", false, function () {\n  return [useTaskDragAndDrop];\n});\n_c = Task;\nexport default _c2 = /*#__PURE__*/memo(Task, (prev, next) => {\n  if (_.isEqual(prev.task, next.task) && _.isEqual(prev.index, next.index) && prev.onDelete === next.onDelete && prev.onDropHover === next.onDropHover && prev.onUpdate === next.onUpdate) {\n    return true;\n  }\n  return false;\n});\nvar _c, _c2;\n$RefreshReg$(_c, \"Task\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["DeleteIcon","Box","IconButton","ScaleFade","_","React","memo","useTaskDragAndDrop","AutoResizeTextarea","jsxDEV","_jsxDEV","Task","index","task","onUpdate","handleUpdate","onDropHover","handleDropHover","onDelete","handleDelete","_s","ref","isDragging","handleTitleChange","e","newTitle","target","value","id","title","handleDeleteClick","in","unmountOnExit","children","as","role","position","rounded","w","pl","pr","pt","pb","boxShadow","cursor","fontWeight","userSelect","bgColor","color","opacity","top","right","zIndex","size","colorScheme","icon","fileName","_jsxFileName","lineNumber","columnNumber","_groupHover","onClick","border","p","resize","minH","maxH","focusBorderColor","onChange","_c","_c2","prev","next","isEqual","$RefreshReg$"],"sources":["/Users/jason/bizchina/src/dashboard/components/Task.tsx"],"sourcesContent":["import { DeleteIcon } from '@chakra-ui/icons';\nimport { Box, IconButton, ScaleFade } from '@chakra-ui/react';\nimport _ from 'lodash';\nimport React, { memo } from 'react';\nimport { useTaskDragAndDrop } from '../hooks/useTaskDragAndDrop.ts';\nimport { TaskModel } from '../utils/models';\nimport { AutoResizeTextarea } from './AutoResizeTextArea.tsx';\n\ntype TaskProps = {\n  index: number;\n  task: TaskModel;\n  onUpdate: (id: TaskModel['id'], updatedTask: TaskModel) => void;\n  onDelete: (id: TaskModel['id']) => void;\n  onDropHover: (i: number, j: number) => void;\n};\n\nfunction Task({\n  index,\n  task,\n  onUpdate: handleUpdate,\n  onDropHover: handleDropHover,\n  onDelete: handleDelete,\n}: TaskProps) {\n  const { ref, isDragging } = useTaskDragAndDrop<HTMLDivElement>(\n    { task, index: index },\n    handleDropHover,\n  );\n\n  const handleTitleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const newTitle = e.target.value;\n    handleUpdate(task.id, { ...task, title: newTitle });\n  };\n\n  const handleDeleteClick = () => {\n    handleDelete(task.id);\n  };\n\n  return (\n    <ScaleFade in={true} unmountOnExit>\n      <Box\n        ref={ref}\n        as=\"div\"\n        role=\"group\"\n        position=\"relative\"\n        rounded=\"lg\"\n        w={200}\n        pl={3}\n        pr={7}\n        pt={3}\n        pb={1}\n        boxShadow=\"xl\"\n        cursor=\"grab\"\n        fontWeight=\"bold\"\n        userSelect=\"none\"\n        bgColor={task.color}\n        opacity={isDragging ? 0.5 : 1}\n      >\n        <IconButton\n          position=\"absolute\"\n          top={0}\n          right={0}\n          zIndex={100}\n          aria-label=\"delete-task\"\n          size=\"md\"\n          colorScheme=\"solid\"\n          color={'gray.700'}\n          icon={<DeleteIcon />}\n          opacity={0}\n          _groupHover={{\n            opacity: 1,\n          }}\n          onClick={handleDeleteClick}\n        />\n        <AutoResizeTextarea\n          value={task.title}\n          fontWeight=\"semibold\"\n          cursor=\"inherit\"\n          border=\"none\"\n          p={0}\n          resize=\"none\"\n          minH={70}\n          maxH={200}\n          focusBorderColor=\"none\"\n          color=\"gray.700\"\n          onChange={handleTitleChange}\n        />\n      </Box>\n    </ScaleFade>\n  );\n}\nexport default memo(Task, (prev, next) => {\n  if (\n    _.isEqual(prev.task, next.task) &&\n    _.isEqual(prev.index, next.index) &&\n    prev.onDelete === next.onDelete &&\n    prev.onDropHover === next.onDropHover &&\n    prev.onUpdate === next.onUpdate\n  ) {\n    return true;\n  }\n\n  return false;\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
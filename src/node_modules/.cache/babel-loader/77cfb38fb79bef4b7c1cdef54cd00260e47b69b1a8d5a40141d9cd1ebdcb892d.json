{"ast":null,"code":"var _jsxFileName = \"/Users/jason/bizchina/src/pages/DashboardScreen/CreateBoardModal.js\",\n  _s = $RefreshSig$();\nimport { Dialog, Stack, Typography, Box, IconButton, TextField, Button } from '@mui/material';\nimport ModalHeader from './ModalHeader';\nimport { useState } from 'react';\n// import CloseIcon from \"@mui/icons-material/Close\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colors = [\"#F49D6E\", \"#E85A4F\", \"#FFD166\", \"#8ABEB7\", \"#247BA0\", \"#D3D3D3\"];\nconst CreateBoardModal = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [color, setColor] = useState(0);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: true,\n    fullWidth: true,\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      p: 2,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        title: \"Create Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        my: 5,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Board Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          spacing: 1,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"#F49D6E\",\n            children: \"Colour: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 19\n          }, this), colors.map(clr => /*#__PURE__*/_jsxDEV(Box, {\n            height: 25,\n            width: 25,\n            backgroundColor: clr,\n            borderRadius: \"50%\"\n          }, clr, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 40\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateBoardModal, \"OYCSYoj6AeKEkD48ae/Gw2LLWuk=\");\n_c = CreateBoardModal;\nexport default CreateBoardModal;\n\n// import { useState } from \"react\";\n// import {\n//   Dialog,\n//   Stack,\n//   Typography,\n//   Box,\n//   TextField,\n//   Button,\n// } from \"@mui/material\";\n// import ModalHeader from \"../../components/layout/ModalHeader\";\n// import { colors } from \"../../theme\";\n// import useApp from \"../../hooks/useApp\";\n// import useStore from \"../../store\";\n\n// const CreateBoardModal = ({ closeModal }) => {\n//   const { createBoard } = useApp();\n//   const [name, setName] = useState(\"\");\n//   const [color, setColor] = useState(0);\n//   const [loading, setLoading] = useState(false);\n//   const { setToastr } = useStore();\n\n//   const handleCreate = async () => {\n//     const tName = name.trim();\n//     if (!tName) return setToastr(\"You need to enter board name\");\n//     if (!/^[a-zA-Z0-9\\s]{1,20}$/.test(tName))\n//       return setToastr(\n//         \"Board name cannot contain special characters and should not be more than 20 chars\"\n//       );\n//     try {\n//       setLoading(true);\n//       await createBoard({ name: tName, color });\n//       closeModal();\n//     } catch (err) {\n//       setLoading(false);\n//       console.log(err);\n//     }\n//   };\n\n//   return (\n//     <Dialog open onClose={closeModal} fullWidth maxWidth=\"xs\">\n//       <Stack p={2}>\n//         <ModalHeader onClose={closeModal} title=\"Create Board\" />\n//         <Stack my={5} spacing={3}>\n//           <TextField\n//             value={name}\n//             onChange={(e) => setName(e.target.value)}\n//             label=\"Board name\"\n//           />\n//           <Stack spacing={1.5} direction=\"row\">\n//             <Typography>Color: </Typography>\n\n//             {colors.map((clr, idx) => (\n//               <Box\n//                 sx={{\n//                   cursor: \"pointer\",\n//                   border: color === idx ? \"3px solid #383838\" : \"none\",\n//                   outline: `2px solid ${clr}`,\n//                 }}\n//                 onClick={() => setColor(idx)}\n//                 key={clr}\n//                 height={25}\n//                 width={25}\n//                 backgroundColor={clr}\n//                 borderRadius=\"50%\"\n//               />\n//             ))}\n//           </Stack>\n//         </Stack>\n//         <Button\n//           disabled={loading}\n//           onClick={handleCreate}\n//           variant=\"contained\"\n//           size=\"large\"\n//         >\n//           Create\n//         </Button>\n//       </Stack>\n//     </Dialog>\n//   );\n// };\n\n// export default CreateBoardModal;\nvar _c;\n$RefreshReg$(_c, \"CreateBoardModal\");","map":{"version":3,"names":["Dialog","Stack","Typography","Box","IconButton","TextField","Button","ModalHeader","useState","jsxDEV","_jsxDEV","colors","CreateBoardModal","_s","name","setName","color","setColor","open","fullWidth","maxWidth","children","p","title","fileName","_jsxFileName","lineNumber","columnNumber","my","spacing","label","direction","map","clr","height","width","backgroundColor","borderRadius","_c","$RefreshReg$"],"sources":["/Users/jason/bizchina/src/pages/DashboardScreen/CreateBoardModal.js"],"sourcesContent":["import { Dialog, Stack, Typography, Box, IconButton, TextField, Button } from '@mui/material'\nimport ModalHeader from './ModalHeader'\nimport { useState } from 'react'\n// import CloseIcon from \"@mui/icons-material/Close\";\n\nconst colors = [\n  \"#F49D6E\",\n  \"#E85A4F\",\n  \"#FFD166\",\n  \"#8ABEB7\",\n  \"#247BA0\",\n  \"#D3D3D3\",\n];\n\nconst CreateBoardModal = () => {\n  const [name, setName] = useState('');\n  const [color, setColor] = useState(0);\n  \n    return (\n        <Dialog open fullWidth maxWidth='xs'>\n            <Stack p={2}>\n              <ModalHeader title='Create Board' />\n              <Stack my={5} spacing={3}>\n                <TextField label='Board Name' />\n                <Stack direction='row' spacing={1}>\n                  <Typography color='#F49D6E'>Colour: </Typography>\n                    {colors.map(clr => <Box\n                    key={clr}\n                    height={25}\n                    width={25}\n                    backgroundColor={clr}\n                    borderRadius='50%'\n                    />)}\n                </Stack>\n              </Stack>\n              <Button>Create</Button>\n            </Stack>\n        </Dialog>\n    )\n}\n\nexport default CreateBoardModal\n\n// import { useState } from \"react\";\n// import {\n//   Dialog,\n//   Stack,\n//   Typography,\n//   Box,\n//   TextField,\n//   Button,\n// } from \"@mui/material\";\n// import ModalHeader from \"../../components/layout/ModalHeader\";\n// import { colors } from \"../../theme\";\n// import useApp from \"../../hooks/useApp\";\n// import useStore from \"../../store\";\n\n// const CreateBoardModal = ({ closeModal }) => {\n//   const { createBoard } = useApp();\n//   const [name, setName] = useState(\"\");\n//   const [color, setColor] = useState(0);\n//   const [loading, setLoading] = useState(false);\n//   const { setToastr } = useStore();\n\n//   const handleCreate = async () => {\n//     const tName = name.trim();\n//     if (!tName) return setToastr(\"You need to enter board name\");\n//     if (!/^[a-zA-Z0-9\\s]{1,20}$/.test(tName))\n//       return setToastr(\n//         \"Board name cannot contain special characters and should not be more than 20 chars\"\n//       );\n//     try {\n//       setLoading(true);\n//       await createBoard({ name: tName, color });\n//       closeModal();\n//     } catch (err) {\n//       setLoading(false);\n//       console.log(err);\n//     }\n//   };\n\n//   return (\n//     <Dialog open onClose={closeModal} fullWidth maxWidth=\"xs\">\n//       <Stack p={2}>\n//         <ModalHeader onClose={closeModal} title=\"Create Board\" />\n//         <Stack my={5} spacing={3}>\n//           <TextField\n//             value={name}\n//             onChange={(e) => setName(e.target.value)}\n//             label=\"Board name\"\n//           />\n//           <Stack spacing={1.5} direction=\"row\">\n//             <Typography>Color: </Typography>\n\n//             {colors.map((clr, idx) => (\n//               <Box\n//                 sx={{\n//                   cursor: \"pointer\",\n//                   border: color === idx ? \"3px solid #383838\" : \"none\",\n//                   outline: `2px solid ${clr}`,\n//                 }}\n//                 onClick={() => setColor(idx)}\n//                 key={clr}\n//                 height={25}\n//                 width={25}\n//                 backgroundColor={clr}\n//                 borderRadius=\"50%\"\n//               />\n//             ))}\n//           </Stack>\n//         </Stack>\n//         <Button\n//           disabled={loading}\n//           onClick={handleCreate}\n//           variant=\"contained\"\n//           size=\"large\"\n//         >\n//           Create\n//         </Button>\n//       </Stack>\n//     </Dialog>\n//   );\n// };\n\n// export default CreateBoardModal;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
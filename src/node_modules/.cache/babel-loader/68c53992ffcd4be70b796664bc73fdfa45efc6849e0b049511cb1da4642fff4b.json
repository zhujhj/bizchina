{"ast":null,"code":"var _jsxFileName = \"/Users/jason/bizchina/src/dashboard/components/Column.tsx\",\n  _s = $RefreshSig$();\nimport { AddIcon } from '@chakra-ui/icons';\nimport { Badge, Box, Heading, IconButton, Stack, useColorModeValue } from '@chakra-ui/react';\nimport React from 'react';\nimport useColumnDrop from '../hooks/useColumnDrop.ts';\nimport useColumnTasks from '../hooks/useColumnTasks.ts';\nimport Task from './Task.tsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColumnColorScheme = {\n  Todo: 'gray',\n  'In Progress': 'blue',\n  Blocked: 'red',\n  Completed: 'green'\n};\nfunction Column({\n  column\n}) {\n  _s();\n  const {\n    tasks,\n    addEmptyTask,\n    deleteTask,\n    dropTaskFrom,\n    swapTasks,\n    updateTask\n  } = useColumnTasks(column);\n  const {\n    dropRef,\n    isOver\n  } = useColumnDrop(column, dropTaskFrom);\n  const ColumnTasks = tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Task, {\n    task: task,\n    index: index,\n    onDropHover: swapTasks,\n    onUpdate: updateTask,\n    onDelete: deleteTask\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      fontSize: \"md\",\n      mb: 4,\n      letterSpacing: \"wide\",\n      children: /*#__PURE__*/_jsxDEV(Badge, {\n        px: 2,\n        py: 1,\n        rounded: \"lg\",\n        colorScheme: ColumnColorScheme[column],\n        children: column\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      size: \"xs\",\n      w: \"full\",\n      color: useColorModeValue('gray.500', 'gray.400'),\n      bgColor: useColorModeValue('gray.100', 'gray.700'),\n      _hover: {\n        bgColor: useColorModeValue('gray.200', 'gray.600')\n      },\n      py: 2,\n      variant: \"solid\",\n      onClick: addEmptyTask,\n      colorScheme: \"black\",\n      \"aria-label\": \"add-task\",\n      icon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      ref: dropRef,\n      direction: {\n        base: 'row',\n        md: 'column'\n      },\n      h: {\n        base: 300,\n        md: 600\n      },\n      p: 4,\n      mt: 2,\n      spacing: 4,\n      bgColor: useColorModeValue('gray.50', 'gray.900'),\n      rounded: \"lg\",\n      boxShadow: \"md\",\n      overflow: \"auto\",\n      opacity: isOver ? 0.85 : 1,\n      children: ColumnTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(Column, \"OvLFHLkpf1j0TjocbMPXM+Zy2Xk=\", false, function () {\n  return [useColumnTasks, useColumnDrop, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue];\n});\n_c = Column;\nexport default Column;\nvar _c;\n$RefreshReg$(_c, \"Column\");","map":{"version":3,"names":["AddIcon","Badge","Box","Heading","IconButton","Stack","useColorModeValue","React","useColumnDrop","useColumnTasks","Task","jsxDEV","_jsxDEV","ColumnColorScheme","Todo","Blocked","Completed","Column","column","_s","tasks","addEmptyTask","deleteTask","dropTaskFrom","swapTasks","updateTask","dropRef","isOver","ColumnTasks","map","task","index","onDropHover","onUpdate","onDelete","id","fileName","_jsxFileName","lineNumber","columnNumber","children","fontSize","mb","letterSpacing","px","py","rounded","colorScheme","size","w","color","bgColor","_hover","variant","onClick","icon","ref","direction","base","md","h","p","mt","spacing","boxShadow","overflow","opacity","_c","$RefreshReg$"],"sources":["/Users/jason/bizchina/src/dashboard/components/Column.tsx"],"sourcesContent":["import { AddIcon } from '@chakra-ui/icons';\nimport {\n  Badge,\n  Box,\n  Heading,\n  IconButton,\n  Stack,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport React from 'react';\nimport useColumnDrop from '../hooks/useColumnDrop.ts';\nimport useColumnTasks from '../hooks/useColumnTasks.ts';\nimport { ColumnType } from '../utils/enums.ts';\nimport Task from './Task.tsx';\n\nconst ColumnColorScheme: Record<ColumnType, string> = {\n  Todo: 'gray',\n  'In Progress': 'blue',\n  Blocked: 'red',\n  Completed: 'green',\n};\n\nfunction Column({ column }: { column: ColumnType }) {\n  const {\n    tasks,\n    addEmptyTask,\n    deleteTask,\n    dropTaskFrom,\n    swapTasks,\n    updateTask,\n  } = useColumnTasks(column);\n\n  const { dropRef, isOver } = useColumnDrop(column, dropTaskFrom);\n\n  const ColumnTasks = tasks.map((task, index) => (\n    <Task\n      key={task.id}\n      task={task}\n      index={index}\n      onDropHover={swapTasks}\n      onUpdate={updateTask}\n      onDelete={deleteTask}\n    />\n  ));\n\n  return (\n    <Box>\n      <Heading fontSize=\"md\" mb={4} letterSpacing=\"wide\">\n        <Badge\n          px={2}\n          py={1}\n          rounded=\"lg\"\n          colorScheme={ColumnColorScheme[column]}\n        >\n          {column}\n        </Badge>\n      </Heading>\n      <IconButton\n        size=\"xs\"\n        w=\"full\"\n        color={useColorModeValue('gray.500', 'gray.400')}\n        bgColor={useColorModeValue('gray.100', 'gray.700')}\n        _hover={{ bgColor: useColorModeValue('gray.200', 'gray.600') }}\n        py={2}\n        variant=\"solid\"\n        onClick={addEmptyTask}\n        colorScheme=\"black\"\n        aria-label=\"add-task\"\n        icon={<AddIcon />}\n      />\n      <Stack\n        ref={dropRef}\n        direction={{ base: 'row', md: 'column' }}\n        h={{ base: 300, md: 600 }}\n        p={4}\n        mt={2}\n        spacing={4}\n        bgColor={useColorModeValue('gray.50', 'gray.900')}\n        rounded=\"lg\"\n        boxShadow=\"md\"\n        overflow=\"auto\"\n        opacity={isOver ? 0.85 : 1}\n      >\n        {ColumnTasks}\n      </Stack>\n    </Box>\n  );\n}\n\nexport default Column;\n"],"mappings":";;AAAA,SAASA,OAAO,QAAQ,kBAAkB;AAC1C,SACEC,KAAK,EACLC,GAAG,EACHC,OAAO,EACPC,UAAU,EACVC,KAAK,EACLC,iBAAiB,QACZ,kBAAkB;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,2BAA2B;AACrD,OAAOC,cAAc,MAAM,4BAA4B;AAEvD,OAAOC,IAAI,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,iBAA6C,GAAG;EACpDC,IAAI,EAAE,MAAM;EACZ,aAAa,EAAE,MAAM;EACrBC,OAAO,EAAE,KAAK;EACdC,SAAS,EAAE;AACb,CAAC;AAED,SAASC,MAAMA,CAAC;EAAEC;AAA+B,CAAC,EAAE;EAAAC,EAAA;EAClD,MAAM;IACJC,KAAK;IACLC,YAAY;IACZC,UAAU;IACVC,YAAY;IACZC,SAAS;IACTC;EACF,CAAC,GAAGhB,cAAc,CAACS,MAAM,CAAC;EAE1B,MAAM;IAAEQ,OAAO;IAAEC;EAAO,CAAC,GAAGnB,aAAa,CAACU,MAAM,EAAEK,YAAY,CAAC;EAE/D,MAAMK,WAAW,GAAGR,KAAK,CAACS,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACxCnB,OAAA,CAACF,IAAI;IAEHoB,IAAI,EAAEA,IAAK;IACXC,KAAK,EAAEA,KAAM;IACbC,WAAW,EAAER,SAAU;IACvBS,QAAQ,EAAER,UAAW;IACrBS,QAAQ,EAAEZ;EAAW,GALhBQ,IAAI,CAACK,EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAMb,CACF,CAAC;EAEF,oBACE3B,OAAA,CAACV,GAAG;IAAAsC,QAAA,gBACF5B,OAAA,CAACT,OAAO;MAACsC,QAAQ,EAAC,IAAI;MAACC,EAAE,EAAE,CAAE;MAACC,aAAa,EAAC,MAAM;MAAAH,QAAA,eAChD5B,OAAA,CAACX,KAAK;QACJ2C,EAAE,EAAE,CAAE;QACNC,EAAE,EAAE,CAAE;QACNC,OAAO,EAAC,IAAI;QACZC,WAAW,EAAElC,iBAAiB,CAACK,MAAM,CAAE;QAAAsB,QAAA,EAEtCtB;MAAM;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACV3B,OAAA,CAACR,UAAU;MACT4C,IAAI,EAAC,IAAI;MACTC,CAAC,EAAC,MAAM;MACRC,KAAK,EAAE5C,iBAAiB,CAAC,UAAU,EAAE,UAAU,CAAE;MACjD6C,OAAO,EAAE7C,iBAAiB,CAAC,UAAU,EAAE,UAAU,CAAE;MACnD8C,MAAM,EAAE;QAAED,OAAO,EAAE7C,iBAAiB,CAAC,UAAU,EAAE,UAAU;MAAE,CAAE;MAC/DuC,EAAE,EAAE,CAAE;MACNQ,OAAO,EAAC,OAAO;MACfC,OAAO,EAAEjC,YAAa;MACtB0B,WAAW,EAAC,OAAO;MACnB,cAAW,UAAU;MACrBQ,IAAI,eAAE3C,OAAA,CAACZ,OAAO;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,eACF3B,OAAA,CAACP,KAAK;MACJmD,GAAG,EAAE9B,OAAQ;MACb+B,SAAS,EAAE;QAAEC,IAAI,EAAE,KAAK;QAAEC,EAAE,EAAE;MAAS,CAAE;MACzCC,CAAC,EAAE;QAAEF,IAAI,EAAE,GAAG;QAAEC,EAAE,EAAE;MAAI,CAAE;MAC1BE,CAAC,EAAE,CAAE;MACLC,EAAE,EAAE,CAAE;MACNC,OAAO,EAAE,CAAE;MACXZ,OAAO,EAAE7C,iBAAiB,CAAC,SAAS,EAAE,UAAU,CAAE;MAClDwC,OAAO,EAAC,IAAI;MACZkB,SAAS,EAAC,IAAI;MACdC,QAAQ,EAAC,MAAM;MACfC,OAAO,EAAEvC,MAAM,GAAG,IAAI,GAAG,CAAE;MAAAa,QAAA,EAE1BZ;IAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACpB,EAAA,CAjEQF,MAAM;EAAA,QAQTR,cAAc,EAEUD,aAAa,EA4B5BF,iBAAiB,EACfA,iBAAiB,EACPA,iBAAiB,EAe3BA,iBAAiB;AAAA;AAAA6D,EAAA,GAvDzBlD,MAAM;AAmEf,eAAeA,MAAM;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
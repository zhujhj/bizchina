{"ast":null,"code":"var _jsxFileName = \"/Users/jason/bizchina/src/pages/signInPage.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport './signInPage.css';\nimport '../firebaseConfig.js';\nimport 'firebase/compat/analytics';\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport logo from '../images/logo.png';\nimport { GoogleAuthProvider, createUserWithEmailAndPassword, getAuth, signInWithPopup } from \"firebase/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst auth = getAuth();\nfunction SignIn(props) {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user] = useAuthState(auth);\n  const signInWithGoogle = props => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    signInWithPopup(auth, provider).then(async result => {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      const credential = GoogleAuthProvider.credentialFromResult(result);\n      const token = credential.accessToken;\n      // The signed-in user info.\n      const user = result.user;\n      console.log(user);\n      await axios.post('http://localhost:3001/authenticate', {\n        username: user.email\n      }).then(r => props.onAuth({\n        ...r.data,\n        secret: user.email\n      })).catch(e => console.log('error', e));\n      // to be changed, hoping to use navigate.push for optimal performance.\n      navigate(`/dashboard`);\n\n      // IdP data available using getAdditionalUserInfo(result)\n      // ...\n    }).catch(error => {\n      // Handle Errors here.\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      // The email of the user's account used.\n      const email = error.customData.email;\n      // The AuthCredential type that was used.\n      const credential = GoogleAuthProvider.credentialFromError(error);\n      // ...\n    });\n  };\n  const signUpWithEmailAndPassword = () => {\n    createUserWithEmailAndPassword(auth, email, password).then(userCredential => {\n      // Signed up\n      let user = userCredential.user;\n      axios.post('http://localhost:3001/authenticate', {\n        username: user.email\n      }).then(r => props.onAuth({\n        ...r.data,\n        secret: user.email\n      })).catch(e => console.log('error', e));\n      // ...\n    }).catch(error => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      // ..\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"signInContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      id: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"signIn\",\n      children: \"Sign in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"manage\",\n      children: \"Log in to start managing your tasks!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"userInput\",\n      type: \"text\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"userInput\",\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"login\",\n      onClick: signUpWithEmailAndPassword,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"sign-in\",\n      onClick: signInWithGoogle,\n      children: \"Sign in with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n_s(SignIn, \"44ttrTiK9ZalCdfkW1o6/BS3a1Y=\", false, function () {\n  return [useNavigate, useAuthState];\n});\n_c = SignIn;\nfunction SignOut() {\n  return auth.currentUser && /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"sign-out\",\n    onClick: () => auth.signOut(),\n    children: \"Sign Out\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n}\n_c2 = SignOut;\nexport default SignIn;\nvar _c, _c2;\n$RefreshReg$(_c, \"SignIn\");\n$RefreshReg$(_c2, \"SignOut\");","map":{"version":3,"names":["axios","React","useState","firebase","useAuthState","logo","GoogleAuthProvider","createUserWithEmailAndPassword","getAuth","signInWithPopup","useNavigate","jsxDEV","_jsxDEV","auth","SignIn","props","_s","navigate","email","setEmail","password","setPassword","user","signInWithGoogle","provider","then","result","credential","credentialFromResult","token","accessToken","console","log","post","username","r","onAuth","data","secret","catch","e","error","errorCode","code","errorMessage","message","customData","credentialFromError","signUpWithEmailAndPassword","userCredential","id","children","src","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","value","onChange","target","onClick","_c","SignOut","currentUser","signOut","_c2","$RefreshReg$"],"sources":["/Users/jason/bizchina/src/pages/signInPage.jsx"],"sourcesContent":["import axios from 'axios';\nimport React, { useState } from 'react';\nimport './signInPage.css';\n\nimport '../firebaseConfig.js';\n\nimport 'firebase/compat/analytics';\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport logo from '../images/logo.png';\n\nimport { GoogleAuthProvider, createUserWithEmailAndPassword, getAuth, signInWithPopup } from \"firebase/auth\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst auth = getAuth();\n\nfunction SignIn(props) {\n    const navigate = useNavigate();\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [user] = useAuthState(auth);\n\n    const signInWithGoogle = (props) => {\n        const provider = new firebase.auth.GoogleAuthProvider();\n        signInWithPopup(auth, provider)\n            .then(async (result) => {\n                // This gives you a Google Access Token. You can use it to access the Google API.\n                const credential = GoogleAuthProvider.credentialFromResult(result);\n                const token = credential.accessToken;\n                // The signed-in user info.\n                const user = result.user;\n                console.log(user);\n                await axios.post(\n                    'http://localhost:3001/authenticate',\n                    {username: user.email}\n                )\n                    .then(r => props.onAuth({...r.data, secret: user.email}))\n                    .catch(e => console.log('error', e))\n                // to be changed, hoping to use navigate.push for optimal performance.\n                navigate(`/dashboard`);\n\n                // IdP data available using getAdditionalUserInfo(result)\n                // ...\n            }).catch((error) => {\n            // Handle Errors here.\n            const errorCode = error.code;\n            const errorMessage = error.message;\n            // The email of the user's account used.\n            const email = error.customData.email;\n            // The AuthCredential type that was used.\n            const credential = GoogleAuthProvider.credentialFromError(error);\n            // ...\n        });\n    }\n    const signUpWithEmailAndPassword = () => {\n        createUserWithEmailAndPassword(auth, email, password)\n            .then((userCredential) => {\n                // Signed up\n                let user = userCredential.user;\n                axios.post(\n                    'http://localhost:3001/authenticate',\n                    {username: user.email}\n                )\n                    .then(r => props.onAuth({ ...r.data, secret: user.email}))\n                    .catch(e => console.log('error', e))\n                // ...\n            })\n            .catch((error) => {\n                const errorCode = error.code;\n                const errorMessage = error.message;\n                // ..\n            });\n\n    };\n    \n    return (\n        <div id=\"signInContainer\">\n            <img src={logo} id=\"logo\"></img>\n            <div id=\"signIn\">Sign in</div>\n            <div id=\"manage\">Log in to start managing your tasks!</div>\n\n            {/* Email and Password inputs */}\n            <input\n                className=\"userInput\"\n                type=\"text\"\n                placeholder=\"Email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n            />\n            <input\n                className=\"userInput\"\n                type=\"password\"\n                placeholder=\"Password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n            />\n\n            {/* Sign in buttons */}\n            <button id=\"login\" onClick={signUpWithEmailAndPassword}>Login</button>\n            <button id=\"sign-in\" onClick={signInWithGoogle}>Sign in with Google</button>\n        </div>\n    )\n\n}\n\nfunction SignOut() {\n    return auth.currentUser && (\n        <button className=\"sign-out\" onClick={() => auth.signOut()}>Sign Out</button>\n    )\n}\n\nexport default SignIn;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
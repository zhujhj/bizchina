{"ast":null,"code":"var _jsxFileName = \"/Users/jason/bizchina/src/pages/DashboardScreen/CreateBoardModal.js\";\nimport { Dialog, Stack, Typography, Box, IconButton } from '@mui/material';\nimport ModalHeader from './ModalHeader';\n// import CloseIcon from \"@mui/icons-material/Close\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateBoardModal = () => {\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: true,\n    fullWidth: true,\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      p: 2,\n      children: /*#__PURE__*/_jsxDEV(ModalHeader, {\n        title: \"Create Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n_c = CreateBoardModal;\nexport default CreateBoardModal;\n\n// import { useState } from \"react\";\n// import {\n//   Dialog,\n//   Stack,\n//   Typography,\n//   Box,\n//   TextField,\n//   Button,\n// } from \"@mui/material\";\n// import ModalHeader from \"../../components/layout/ModalHeader\";\n// import { colors } from \"../../theme\";\n// import useApp from \"../../hooks/useApp\";\n// import useStore from \"../../store\";\n\n// const CreateBoardModal = ({ closeModal }) => {\n//   const { createBoard } = useApp();\n//   const [name, setName] = useState(\"\");\n//   const [color, setColor] = useState(0);\n//   const [loading, setLoading] = useState(false);\n//   const { setToastr } = useStore();\n\n//   const handleCreate = async () => {\n//     const tName = name.trim();\n//     if (!tName) return setToastr(\"You need to enter board name\");\n//     if (!/^[a-zA-Z0-9\\s]{1,20}$/.test(tName))\n//       return setToastr(\n//         \"Board name cannot contain special characters and should not be more than 20 chars\"\n//       );\n//     try {\n//       setLoading(true);\n//       await createBoard({ name: tName, color });\n//       closeModal();\n//     } catch (err) {\n//       setLoading(false);\n//       console.log(err);\n//     }\n//   };\n\n//   return (\n//     <Dialog open onClose={closeModal} fullWidth maxWidth=\"xs\">\n//       <Stack p={2}>\n//         <ModalHeader onClose={closeModal} title=\"Create Board\" />\n//         <Stack my={5} spacing={3}>\n//           <TextField\n//             value={name}\n//             onChange={(e) => setName(e.target.value)}\n//             label=\"Board name\"\n//           />\n//           <Stack spacing={1.5} direction=\"row\">\n//             <Typography>Color: </Typography>\n\n//             {colors.map((clr, idx) => (\n//               <Box\n//                 sx={{\n//                   cursor: \"pointer\",\n//                   border: color === idx ? \"3px solid #383838\" : \"none\",\n//                   outline: `2px solid ${clr}`,\n//                 }}\n//                 onClick={() => setColor(idx)}\n//                 key={clr}\n//                 height={25}\n//                 width={25}\n//                 backgroundColor={clr}\n//                 borderRadius=\"50%\"\n//               />\n//             ))}\n//           </Stack>\n//         </Stack>\n//         <Button\n//           disabled={loading}\n//           onClick={handleCreate}\n//           variant=\"contained\"\n//           size=\"large\"\n//         >\n//           Create\n//         </Button>\n//       </Stack>\n//     </Dialog>\n//   );\n// };\n\n// export default CreateBoardModal;\nvar _c;\n$RefreshReg$(_c, \"CreateBoardModal\");","map":{"version":3,"names":["Dialog","Stack","Typography","Box","IconButton","ModalHeader","jsxDEV","_jsxDEV","CreateBoardModal","open","fullWidth","maxWidth","children","p","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jason/bizchina/src/pages/DashboardScreen/CreateBoardModal.js"],"sourcesContent":["import { Dialog, Stack, Typography, Box, IconButton } from '@mui/material'\nimport ModalHeader from './ModalHeader'\n// import CloseIcon from \"@mui/icons-material/Close\";\n\nconst CreateBoardModal = () => {\n    return (\n        <Dialog open fullWidth maxWidth='xs'>\n            <Stack p={2}>\n              <ModalHeader title='Create Board' />\n            </Stack>\n        </Dialog>\n    )\n}\n\nexport default CreateBoardModal\n\n// import { useState } from \"react\";\n// import {\n//   Dialog,\n//   Stack,\n//   Typography,\n//   Box,\n//   TextField,\n//   Button,\n// } from \"@mui/material\";\n// import ModalHeader from \"../../components/layout/ModalHeader\";\n// import { colors } from \"../../theme\";\n// import useApp from \"../../hooks/useApp\";\n// import useStore from \"../../store\";\n\n// const CreateBoardModal = ({ closeModal }) => {\n//   const { createBoard } = useApp();\n//   const [name, setName] = useState(\"\");\n//   const [color, setColor] = useState(0);\n//   const [loading, setLoading] = useState(false);\n//   const { setToastr } = useStore();\n\n//   const handleCreate = async () => {\n//     const tName = name.trim();\n//     if (!tName) return setToastr(\"You need to enter board name\");\n//     if (!/^[a-zA-Z0-9\\s]{1,20}$/.test(tName))\n//       return setToastr(\n//         \"Board name cannot contain special characters and should not be more than 20 chars\"\n//       );\n//     try {\n//       setLoading(true);\n//       await createBoard({ name: tName, color });\n//       closeModal();\n//     } catch (err) {\n//       setLoading(false);\n//       console.log(err);\n//     }\n//   };\n\n//   return (\n//     <Dialog open onClose={closeModal} fullWidth maxWidth=\"xs\">\n//       <Stack p={2}>\n//         <ModalHeader onClose={closeModal} title=\"Create Board\" />\n//         <Stack my={5} spacing={3}>\n//           <TextField\n//             value={name}\n//             onChange={(e) => setName(e.target.value)}\n//             label=\"Board name\"\n//           />\n//           <Stack spacing={1.5} direction=\"row\">\n//             <Typography>Color: </Typography>\n\n//             {colors.map((clr, idx) => (\n//               <Box\n//                 sx={{\n//                   cursor: \"pointer\",\n//                   border: color === idx ? \"3px solid #383838\" : \"none\",\n//                   outline: `2px solid ${clr}`,\n//                 }}\n//                 onClick={() => setColor(idx)}\n//                 key={clr}\n//                 height={25}\n//                 width={25}\n//                 backgroundColor={clr}\n//                 borderRadius=\"50%\"\n//               />\n//             ))}\n//           </Stack>\n//         </Stack>\n//         <Button\n//           disabled={loading}\n//           onClick={handleCreate}\n//           variant=\"contained\"\n//           size=\"large\"\n//         >\n//           Create\n//         </Button>\n//       </Stack>\n//     </Dialog>\n//   );\n// };\n\n// export default CreateBoardModal;"],"mappings":";AAAA,SAASA,MAAM,EAAEC,KAAK,EAAEC,UAAU,EAAEC,GAAG,EAAEC,UAAU,QAAQ,eAAe;AAC1E,OAAOC,WAAW,MAAM,eAAe;AACvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAC3B,oBACID,OAAA,CAACP,MAAM;IAACS,IAAI;IAACC,SAAS;IAACC,QAAQ,EAAC,IAAI;IAAAC,QAAA,eAChCL,OAAA,CAACN,KAAK;MAACY,CAAC,EAAE,CAAE;MAAAD,QAAA,eACVL,OAAA,CAACF,WAAW;QAACS,KAAK,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEjB,CAAC;AAAAC,EAAA,GARKX,gBAAgB;AAUtB,eAAeA,gBAAgB;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
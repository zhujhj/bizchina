{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useDrop } from 'react-dnd';\nimport { ItemType } from '../utils/enums.ts';\nfunction useColumnDrop(column, handleDrop) {\n  _s();\n  const [{\n    isOver\n  }, dropRef] = useDrop({\n    accept: ItemType.TASK,\n    drop: dragItem => {\n      if (!dragItem || dragItem.from === column) {\n        return;\n      }\n      handleDrop(dragItem.from, dragItem.id);\n    },\n    collect: monitor => ({\n      isOver: monitor.isOver()\n    })\n  });\n  return {\n    isOver,\n    dropRef\n  };\n}\n_s(useColumnDrop, \"kR+zGxC4m+4GBCr2BiZErhG5N4A=\", false, function () {\n  return [useDrop];\n});\nexport default useColumnDrop;","map":{"version":3,"names":["useDrop","ItemType","useColumnDrop","column","handleDrop","_s","isOver","dropRef","accept","TASK","drop","dragItem","from","id","collect","monitor"],"sources":["/Users/jason/bizchina/src/dashboard/hooks/useColumnDrop.ts"],"sourcesContent":["import { useDrop } from 'react-dnd';\nimport { ColumnType, ItemType } from '../utils/enums.ts';\nimport { DragItem, TaskModel } from '../utils/models.ts';\n\nfunction useColumnDrop(\n  column: ColumnType,\n  handleDrop: (fromColumn: ColumnType, taskId: TaskModel['id']) => void,\n) {\n  const [{ isOver }, dropRef] = useDrop<DragItem, void, { isOver: boolean }>({\n    accept: ItemType.TASK,\n    drop: (dragItem) => {\n      if (!dragItem || dragItem.from === column) {\n        return;\n      }\n\n      handleDrop(dragItem.from, dragItem.id);\n    },\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n    }),\n  });\n\n  return {\n    isOver,\n    dropRef,\n  };\n}\n\nexport default useColumnDrop;\n"],"mappings":";AAAA,SAASA,OAAO,QAAQ,WAAW;AACnC,SAAqBC,QAAQ,QAAQ,mBAAmB;AAGxD,SAASC,aAAaA,CACpBC,MAAkB,EAClBC,UAAqE,EACrE;EAAAC,EAAA;EACA,MAAM,CAAC;IAAEC;EAAO,CAAC,EAAEC,OAAO,CAAC,GAAGP,OAAO,CAAsC;IACzEQ,MAAM,EAAEP,QAAQ,CAACQ,IAAI;IACrBC,IAAI,EAAGC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,IAAIA,QAAQ,CAACC,IAAI,KAAKT,MAAM,EAAE;QACzC;MACF;MAEAC,UAAU,CAACO,QAAQ,CAACC,IAAI,EAAED,QAAQ,CAACE,EAAE,CAAC;IACxC,CAAC;IACDC,OAAO,EAAGC,OAAO,KAAM;MACrBT,MAAM,EAAES,OAAO,CAACT,MAAM,CAAC;IACzB,CAAC;EACH,CAAC,CAAC;EAEF,OAAO;IACLA,MAAM;IACNC;EACF,CAAC;AACH;AAACF,EAAA,CAtBQH,aAAa;EAAA,QAIUF,OAAO;AAAA;AAoBvC,eAAeE,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}
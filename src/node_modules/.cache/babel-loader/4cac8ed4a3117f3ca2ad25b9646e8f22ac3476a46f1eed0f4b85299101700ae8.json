{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useLocalStorage } from 'usehooks-ts';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ColumnType } from '../utils/enums.ts';\nimport '../../firebaseConfig.js';\nimport 'firebase/compat/analytics';\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nimport { getAuth } from \"firebase/auth\";\nimport { useRef } from 'react';\nconst auth = getAuth();\nconst firestore = firebase.firestore();\n\n// let todo: TaskModel[] = [];\n// let inProgress = [];\n// let blocked = [];\n// let completed = [];\n\n// for (let task in kanbanRef.get()) {\n//   if (task['column'] === \"Todo\") {\n//     todo.push(task);\n//   } else if (task['column'] === \"In Progress\") {\n//     inProgress.push(task);\n//   } else if (task['column'] === \"Blocked\") {\n\n//   } else if (task['column'] === \"Completed\") {\n\n//   }\n// }\n\nconst dummy = useRef();\nconst kanbanRef = firestore.collection('tasks');\nconst query = kanbanRef.orderBy('id');\nconst taskQueryByColumn = column => kanbanRef.where('column', '==', column);\nfunction useTaskCollection() {\n  _s();\n  return useLocalStorage('tasks', {\n    Todo: [{\n      id: uuidv4(),\n      column: ColumnType.TO_DO,\n      title: 'Task 1',\n      color: 'blue.300'\n    }],\n    'In Progress': [{\n      id: uuidv4(),\n      column: ColumnType.IN_PROGRESS,\n      title: 'Task 2',\n      color: 'yellow.300'\n    }],\n    Blocked: [{\n      id: uuidv4(),\n      column: ColumnType.BLOCKED,\n      title: 'Task 3',\n      color: 'red.300'\n    }],\n    Completed: [{\n      id: uuidv4(),\n      column: ColumnType.COMPLETED,\n      title: 'Task 4',\n      color: 'green.300'\n    }]\n  });\n}\n_s(useTaskCollection, \"cjcH6UV3r3BpJj6dUjZ/UwDNNow=\", false, function () {\n  return [useLocalStorage];\n});\nexport default useTaskCollection;","map":{"version":3,"names":["useLocalStorage","v4","uuidv4","ColumnType","firebase","getAuth","useRef","auth","firestore","dummy","kanbanRef","collection","query","orderBy","taskQueryByColumn","column","where","useTaskCollection","_s","Todo","id","TO_DO","title","color","IN_PROGRESS","Blocked","BLOCKED","Completed","COMPLETED"],"sources":["/Users/jason/bizchina/src/dashboard/hooks/useTaskCollection.ts"],"sourcesContent":["import { useLocalStorage } from 'usehooks-ts';\n\nimport { v4 as uuidv4 } from 'uuid';\nimport { ColumnType } from '../utils/enums.ts';\nimport { TaskModel } from '../utils/models.ts';\n\nimport '../../firebaseConfig.js';\n\nimport 'firebase/compat/analytics';\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nimport { getAuth } from \"firebase/auth\";\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport { useRef } from 'react';\n\nconst auth = getAuth();\nconst firestore = firebase.firestore();\n\n// let todo: TaskModel[] = [];\n// let inProgress = [];\n// let blocked = [];\n// let completed = [];\n\n// for (let task in kanbanRef.get()) {\n//   if (task['column'] === \"Todo\") {\n//     todo.push(task);\n//   } else if (task['column'] === \"In Progress\") {\n//     inProgress.push(task);\n//   } else if (task['column'] === \"Blocked\") {\n\n//   } else if (task['column'] === \"Completed\") {\n\n//   }\n// }\n\nconst dummy = useRef();\nconst kanbanRef = firestore.collection('tasks');\nconst query = kanbanRef.orderBy('id');\nconst taskQueryByColumn = (column) => kanbanRef.where('column', '==', column);\n\n\n\nfunction useTaskCollection() {\n  \n  return useLocalStorage<{\n    [key in ColumnType]: TaskModel[];\n  }>('tasks', {\n    Todo: [\n      {\n        id: uuidv4(),\n        column: ColumnType.TO_DO,\n        title: 'Task 1',\n        color: 'blue.300',\n      },\n    ],\n    'In Progress': [\n      {\n        id: uuidv4(),\n        column: ColumnType.IN_PROGRESS,\n        title: 'Task 2',\n        color: 'yellow.300',\n      },\n    ],\n    Blocked: [\n      {\n        id: uuidv4(),\n        column: ColumnType.BLOCKED,\n        title: 'Task 3',\n        color: 'red.300',\n      },\n    ],\n    Completed: [\n      {\n        id: uuidv4(),\n        column: ColumnType.COMPLETED,\n        title: 'Task 4',\n        color: 'green.300',\n      },\n    ],\n  });\n}\n\nexport default useTaskCollection;\n"],"mappings":";AAAA,SAASA,eAAe,QAAQ,aAAa;AAE7C,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AACnC,SAASC,UAAU,QAAQ,mBAAmB;AAG9C,OAAO,yBAAyB;AAEhC,OAAO,2BAA2B;AAClC,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAO,sBAAsB;AAC7B,OAAO,2BAA2B;AAElC,SAASC,OAAO,QAAQ,eAAe;AAEvC,SAASC,MAAM,QAAQ,OAAO;AAE9B,MAAMC,IAAI,GAAGF,OAAO,CAAC,CAAC;AACtB,MAAMG,SAAS,GAAGJ,QAAQ,CAACI,SAAS,CAAC,CAAC;;AAEtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,MAAMC,KAAK,GAAGH,MAAM,CAAC,CAAC;AACtB,MAAMI,SAAS,GAAGF,SAAS,CAACG,UAAU,CAAC,OAAO,CAAC;AAC/C,MAAMC,KAAK,GAAGF,SAAS,CAACG,OAAO,CAAC,IAAI,CAAC;AACrC,MAAMC,iBAAiB,GAAIC,MAAM,IAAKL,SAAS,CAACM,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAED,MAAM,CAAC;AAI7E,SAASE,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAE3B,OAAOlB,eAAe,CAEnB,OAAO,EAAE;IACVmB,IAAI,EAAE,CACJ;MACEC,EAAE,EAAElB,MAAM,CAAC,CAAC;MACZa,MAAM,EAAEZ,UAAU,CAACkB,KAAK;MACxBC,KAAK,EAAE,QAAQ;MACfC,KAAK,EAAE;IACT,CAAC,CACF;IACD,aAAa,EAAE,CACb;MACEH,EAAE,EAAElB,MAAM,CAAC,CAAC;MACZa,MAAM,EAAEZ,UAAU,CAACqB,WAAW;MAC9BF,KAAK,EAAE,QAAQ;MACfC,KAAK,EAAE;IACT,CAAC,CACF;IACDE,OAAO,EAAE,CACP;MACEL,EAAE,EAAElB,MAAM,CAAC,CAAC;MACZa,MAAM,EAAEZ,UAAU,CAACuB,OAAO;MAC1BJ,KAAK,EAAE,QAAQ;MACfC,KAAK,EAAE;IACT,CAAC,CACF;IACDI,SAAS,EAAE,CACT;MACEP,EAAE,EAAElB,MAAM,CAAC,CAAC;MACZa,MAAM,EAAEZ,UAAU,CAACyB,SAAS;MAC5BN,KAAK,EAAE,QAAQ;MACfC,KAAK,EAAE;IACT,CAAC;EAEL,CAAC,CAAC;AACJ;AAACL,EAAA,CAtCQD,iBAAiB;EAAA,QAEjBjB,eAAe;AAAA;AAsCxB,eAAeiB,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { useCallback } from 'react';\nimport { useBoolean, useCounter, useInterval } from '..';\nfunction useCountdown(countdownOption) {\n  let isDeprecated = false;\n  let countStart, intervalMs, isIncrement, countStop;\n  if ('seconds' in countdownOption) {\n    console.warn('[useCountdown:DEPRECATED] new interface is already available (see https://usehooks-ts.com/react-hook/use-countdown), the old version will retire on usehooks-ts@3.');\n    isDeprecated = true;\n    countStart = countdownOption.seconds;\n    intervalMs = countdownOption.interval;\n    isIncrement = countdownOption.isIncrement;\n  } else {\n    ;\n    ({\n      countStart,\n      intervalMs,\n      isIncrement,\n      countStop\n    } = countdownOption);\n  }\n  intervalMs = intervalMs !== null && intervalMs !== void 0 ? intervalMs : 1000;\n  isIncrement = isIncrement !== null && isIncrement !== void 0 ? isIncrement : false;\n  countStop = countStop !== null && countStop !== void 0 ? countStop : 0;\n  const {\n    count,\n    increment,\n    decrement,\n    reset: resetCounter\n  } = useCounter(countStart);\n  const {\n    value: isCountdownRunning,\n    setTrue: startCountdown,\n    setFalse: stopCountdown\n  } = useBoolean(false);\n  const resetCountdown = () => {\n    stopCountdown();\n    resetCounter();\n  };\n  const countdownCallback = useCallback(() => {\n    if (count === countStop) {\n      stopCountdown();\n      return;\n    }\n    if (isIncrement) {\n      increment();\n    } else {\n      decrement();\n    }\n  }, [count, countStop, decrement, increment, isIncrement, stopCountdown]);\n  useInterval(countdownCallback, isCountdownRunning ? intervalMs : null);\n  return isDeprecated ? [count, {\n    start: startCountdown,\n    stop: stopCountdown,\n    reset: resetCountdown\n  }] : [count, {\n    startCountdown,\n    stopCountdown,\n    resetCountdown\n  }];\n}\nexport default useCountdown;","map":{"version":3,"names":["useCallback","useBoolean","useCounter","useInterval","useCountdown","countdownOption","isDeprecated","countStart","intervalMs","isIncrement","countStop","console","warn","seconds","interval","count","increment","decrement","reset","resetCounter","value","isCountdownRunning","setTrue","startCountdown","setFalse","stopCountdown","resetCountdown","countdownCallback","start","stop"],"sources":["/Users/jason/bizchina/node_modules/usehooks-ts/dist/esm/useCountdown/useCountdown.js"],"sourcesContent":["import { useCallback } from 'react';\nimport { useBoolean, useCounter, useInterval } from '..';\nfunction useCountdown(countdownOption) {\n    let isDeprecated = false;\n    let countStart, intervalMs, isIncrement, countStop;\n    if ('seconds' in countdownOption) {\n        console.warn('[useCountdown:DEPRECATED] new interface is already available (see https://usehooks-ts.com/react-hook/use-countdown), the old version will retire on usehooks-ts@3.');\n        isDeprecated = true;\n        countStart = countdownOption.seconds;\n        intervalMs = countdownOption.interval;\n        isIncrement = countdownOption.isIncrement;\n    }\n    else {\n        ;\n        ({ countStart, intervalMs, isIncrement, countStop } = countdownOption);\n    }\n    intervalMs = intervalMs !== null && intervalMs !== void 0 ? intervalMs : 1000;\n    isIncrement = isIncrement !== null && isIncrement !== void 0 ? isIncrement : false;\n    countStop = countStop !== null && countStop !== void 0 ? countStop : 0;\n    const { count, increment, decrement, reset: resetCounter, } = useCounter(countStart);\n    const { value: isCountdownRunning, setTrue: startCountdown, setFalse: stopCountdown, } = useBoolean(false);\n    const resetCountdown = () => {\n        stopCountdown();\n        resetCounter();\n    };\n    const countdownCallback = useCallback(() => {\n        if (count === countStop) {\n            stopCountdown();\n            return;\n        }\n        if (isIncrement) {\n            increment();\n        }\n        else {\n            decrement();\n        }\n    }, [count, countStop, decrement, increment, isIncrement, stopCountdown]);\n    useInterval(countdownCallback, isCountdownRunning ? intervalMs : null);\n    return isDeprecated\n        ? [\n            count,\n            {\n                start: startCountdown,\n                stop: stopCountdown,\n                reset: resetCountdown,\n            },\n        ]\n        : [\n            count,\n            {\n                startCountdown,\n                stopCountdown,\n                resetCountdown,\n            },\n        ];\n}\nexport default useCountdown;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,UAAU,EAAEC,UAAU,EAAEC,WAAW,QAAQ,IAAI;AACxD,SAASC,YAAYA,CAACC,eAAe,EAAE;EACnC,IAAIC,YAAY,GAAG,KAAK;EACxB,IAAIC,UAAU,EAAEC,UAAU,EAAEC,WAAW,EAAEC,SAAS;EAClD,IAAI,SAAS,IAAIL,eAAe,EAAE;IAC9BM,OAAO,CAACC,IAAI,CAAC,oKAAoK,CAAC;IAClLN,YAAY,GAAG,IAAI;IACnBC,UAAU,GAAGF,eAAe,CAACQ,OAAO;IACpCL,UAAU,GAAGH,eAAe,CAACS,QAAQ;IACrCL,WAAW,GAAGJ,eAAe,CAACI,WAAW;EAC7C,CAAC,MACI;IACD;IACA,CAAC;MAAEF,UAAU;MAAEC,UAAU;MAAEC,WAAW;MAAEC;IAAU,CAAC,GAAGL,eAAe;EACzE;EACAG,UAAU,GAAGA,UAAU,KAAK,IAAI,IAAIA,UAAU,KAAK,KAAK,CAAC,GAAGA,UAAU,GAAG,IAAI;EAC7EC,WAAW,GAAGA,WAAW,KAAK,IAAI,IAAIA,WAAW,KAAK,KAAK,CAAC,GAAGA,WAAW,GAAG,KAAK;EAClFC,SAAS,GAAGA,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,KAAK,CAAC,GAAGA,SAAS,GAAG,CAAC;EACtE,MAAM;IAAEK,KAAK;IAAEC,SAAS;IAAEC,SAAS;IAAEC,KAAK,EAAEC;EAAc,CAAC,GAAGjB,UAAU,CAACK,UAAU,CAAC;EACpF,MAAM;IAAEa,KAAK,EAAEC,kBAAkB;IAAEC,OAAO,EAAEC,cAAc;IAAEC,QAAQ,EAAEC;EAAe,CAAC,GAAGxB,UAAU,CAAC,KAAK,CAAC;EAC1G,MAAMyB,cAAc,GAAGA,CAAA,KAAM;IACzBD,aAAa,CAAC,CAAC;IACfN,YAAY,CAAC,CAAC;EAClB,CAAC;EACD,MAAMQ,iBAAiB,GAAG3B,WAAW,CAAC,MAAM;IACxC,IAAIe,KAAK,KAAKL,SAAS,EAAE;MACrBe,aAAa,CAAC,CAAC;MACf;IACJ;IACA,IAAIhB,WAAW,EAAE;MACbO,SAAS,CAAC,CAAC;IACf,CAAC,MACI;MACDC,SAAS,CAAC,CAAC;IACf;EACJ,CAAC,EAAE,CAACF,KAAK,EAAEL,SAAS,EAAEO,SAAS,EAAED,SAAS,EAAEP,WAAW,EAAEgB,aAAa,CAAC,CAAC;EACxEtB,WAAW,CAACwB,iBAAiB,EAAEN,kBAAkB,GAAGb,UAAU,GAAG,IAAI,CAAC;EACtE,OAAOF,YAAY,GACb,CACES,KAAK,EACL;IACIa,KAAK,EAAEL,cAAc;IACrBM,IAAI,EAAEJ,aAAa;IACnBP,KAAK,EAAEQ;EACX,CAAC,CACJ,GACC,CACEX,KAAK,EACL;IACIQ,cAAc;IACdE,aAAa;IACbC;EACJ,CAAC,CACJ;AACT;AACA,eAAetB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}
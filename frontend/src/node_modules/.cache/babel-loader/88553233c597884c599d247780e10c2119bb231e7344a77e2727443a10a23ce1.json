{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useLocalStorage } from 'usehooks-ts';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ColumnType } from '../utils/enums.ts';\nimport '../../firebaseConfig.js';\nimport 'firebase/compat/analytics';\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nimport { getAuth } from \"firebase/auth\";\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport { useRef } from 'react';\nconst auth = getAuth();\nconst firestore = firebase.firestore();\n\n// let todo: TaskModel[] = [];\n// let inProgress = [];\n// let blocked = [];\n// let completed = [];\n\n// for (let task in kanbanRef.get()) {\n//   if (task['column'] === \"Todo\") {\n//     todo.push(task);\n//   } else if (task['column'] === \"In Progress\") {\n//     inProgress.push(task);\n//   } else if (task['column'] === \"Blocked\") {\n\n//   } else if (task['column'] === \"Completed\") {\n\n//   }\n// }\n\nasync function fetchTasks() {\n  const tasksRef = collection(firestore, 'tasks');\n  const q = query(tasksRef);\n  const querySnapshot = await getDocs(q);\n  const tasks = [];\n  querySnapshot.forEach(doc => {\n    tasks.push({\n      id: doc.id,\n      ...doc.data()\n    });\n  });\n  return tasks;\n}\nfunction useTaskCollection() {\n  _s();\n  const dummy = useRef();\n  const kanbanRef = firestore.collection('tasks');\n  const query = kanbanRef.orderBy('id');\n  console.log(\"kanban \" + query);\n  const [tasks] = useCollectionData(query, {\n    idField: 'id'\n  });\n\n  // const kanbanRef = firestore.collection('tasks');\n  // const query = kanbanRef.orderBy('id');\n\n  // query.get().then(snapshot => {\n  //   const tasks = [];\n  //   snapshot.forEach(doc => {\n  //     tasks.push({\n  //       id: doc.id\n  //     });\n  //   });\n  //   console.log(tasks);\n  // });\n\n  return useLocalStorage('tasks', {\n    Todo: [{\n      id: uuidv4(),\n      column: ColumnType.TO_DO,\n      title: 'Task 1',\n      color: 'blue.300'\n    }],\n    'In Progress': [{\n      id: uuidv4(),\n      column: ColumnType.IN_PROGRESS,\n      title: 'Task 2',\n      color: 'yellow.300'\n    }],\n    Blocked: [{\n      id: uuidv4(),\n      column: ColumnType.BLOCKED,\n      title: 'Task 3',\n      color: 'red.300'\n    }],\n    Completed: [{\n      id: uuidv4(),\n      column: ColumnType.COMPLETED,\n      title: 'Task 4',\n      color: 'green.300'\n    }]\n  });\n}\n_s(useTaskCollection, \"qpqi9oK2GhwFwFzRRQHrvwshqhM=\", false, function () {\n  return [useCollectionData, useLocalStorage];\n});\nexport default useTaskCollection;","map":{"version":3,"names":["useLocalStorage","v4","uuidv4","ColumnType","firebase","getAuth","useCollectionData","useRef","auth","firestore","fetchTasks","tasksRef","collection","q","query","querySnapshot","getDocs","tasks","forEach","doc","push","id","data","useTaskCollection","_s","dummy","kanbanRef","orderBy","console","log","idField","Todo","column","TO_DO","title","color","IN_PROGRESS","Blocked","BLOCKED","Completed","COMPLETED"],"sources":["/Users/jason/bizchina/src/dashboard/hooks/useTaskCollection.ts"],"sourcesContent":["import { useLocalStorage } from 'usehooks-ts';\n\nimport { v4 as uuidv4 } from 'uuid';\nimport { ColumnType } from '../utils/enums.ts';\nimport { TaskModel } from '../utils/models.ts';\n\nimport '../../firebaseConfig.js';\n\nimport 'firebase/compat/analytics';\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nimport { getAuth } from \"firebase/auth\";\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport { useRef } from 'react';\n\nconst auth = getAuth();\nconst firestore = firebase.firestore();\n\n// let todo: TaskModel[] = [];\n// let inProgress = [];\n// let blocked = [];\n// let completed = [];\n\n// for (let task in kanbanRef.get()) {\n//   if (task['column'] === \"Todo\") {\n//     todo.push(task);\n//   } else if (task['column'] === \"In Progress\") {\n//     inProgress.push(task);\n//   } else if (task['column'] === \"Blocked\") {\n\n//   } else if (task['column'] === \"Completed\") {\n\n//   }\n// }\n\nasync function fetchTasks(): Promise<Task[]> {\n  const tasksRef = collection(firestore, 'tasks');\n  const q = query(tasksRef);\n  const querySnapshot = await getDocs(q);\n  const tasks: Task[] = [];\n\n  querySnapshot.forEach((doc) => {\n    tasks.push({ id: doc.id, ...(doc.data() as DocumentData) as Task });\n  });\n\n  return tasks;\n}\n\nfunction useTaskCollection() {\n  const dummy = useRef();\n  const kanbanRef = firestore.collection('tasks');\n  const query = kanbanRef.orderBy('id');\n  console.log(\"kanban \" + query);\n  const [tasks] = useCollectionData(query, { idField: 'id' });\n\n  // const kanbanRef = firestore.collection('tasks');\n  // const query = kanbanRef.orderBy('id');\n\n  // query.get().then(snapshot => {\n  //   const tasks = [];\n  //   snapshot.forEach(doc => {\n  //     tasks.push({\n  //       id: doc.id\n  //     });\n  //   });\n  //   console.log(tasks);\n  // });\n  \n  \n  return useLocalStorage<{\n    [key in ColumnType]: TaskModel[];\n  }>('tasks', {\n    Todo: [\n      {\n        id: uuidv4(),\n        column: ColumnType.TO_DO,\n        title: 'Task 1',\n        color: 'blue.300',\n      },\n    ],\n    'In Progress': [\n      {\n        id: uuidv4(),\n        column: ColumnType.IN_PROGRESS,\n        title: 'Task 2',\n        color: 'yellow.300',\n      },\n    ],\n    Blocked: [\n      {\n        id: uuidv4(),\n        column: ColumnType.BLOCKED,\n        title: 'Task 3',\n        color: 'red.300',\n      },\n    ],\n    Completed: [\n      {\n        id: uuidv4(),\n        column: ColumnType.COMPLETED,\n        title: 'Task 4',\n        color: 'green.300',\n      },\n    ],\n  });\n}\n\nexport default useTaskCollection;\n"],"mappings":";AAAA,SAASA,eAAe,QAAQ,aAAa;AAE7C,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AACnC,SAASC,UAAU,QAAQ,mBAAmB;AAG9C,OAAO,yBAAyB;AAEhC,OAAO,2BAA2B;AAClC,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAO,sBAAsB;AAC7B,OAAO,2BAA2B;AAElC,SAASC,OAAO,QAAQ,eAAe;AACvC,SAASC,iBAAiB,QAAQ,gCAAgC;AAClE,SAASC,MAAM,QAAQ,OAAO;AAE9B,MAAMC,IAAI,GAAGH,OAAO,CAAC,CAAC;AACtB,MAAMI,SAAS,GAAGL,QAAQ,CAACK,SAAS,CAAC,CAAC;;AAEtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,eAAeC,UAAUA,CAAA,EAAoB;EAC3C,MAAMC,QAAQ,GAAGC,UAAU,CAACH,SAAS,EAAE,OAAO,CAAC;EAC/C,MAAMI,CAAC,GAAGC,KAAK,CAACH,QAAQ,CAAC;EACzB,MAAMI,aAAa,GAAG,MAAMC,OAAO,CAACH,CAAC,CAAC;EACtC,MAAMI,KAAa,GAAG,EAAE;EAExBF,aAAa,CAACG,OAAO,CAAEC,GAAG,IAAK;IAC7BF,KAAK,CAACG,IAAI,CAAC;MAAEC,EAAE,EAAEF,GAAG,CAACE,EAAE;MAAE,GAAIF,GAAG,CAACG,IAAI,CAAC;IAA2B,CAAC,CAAC;EACrE,CAAC,CAAC;EAEF,OAAOL,KAAK;AACd;AAEA,SAASM,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAMC,KAAK,GAAGlB,MAAM,CAAC,CAAC;EACtB,MAAMmB,SAAS,GAAGjB,SAAS,CAACG,UAAU,CAAC,OAAO,CAAC;EAC/C,MAAME,KAAK,GAAGY,SAAS,CAACC,OAAO,CAAC,IAAI,CAAC;EACrCC,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGf,KAAK,CAAC;EAC9B,MAAM,CAACG,KAAK,CAAC,GAAGX,iBAAiB,CAACQ,KAAK,EAAE;IAAEgB,OAAO,EAAE;EAAK,CAAC,CAAC;;EAE3D;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA,OAAO9B,eAAe,CAEnB,OAAO,EAAE;IACV+B,IAAI,EAAE,CACJ;MACEV,EAAE,EAAEnB,MAAM,CAAC,CAAC;MACZ8B,MAAM,EAAE7B,UAAU,CAAC8B,KAAK;MACxBC,KAAK,EAAE,QAAQ;MACfC,KAAK,EAAE;IACT,CAAC,CACF;IACD,aAAa,EAAE,CACb;MACEd,EAAE,EAAEnB,MAAM,CAAC,CAAC;MACZ8B,MAAM,EAAE7B,UAAU,CAACiC,WAAW;MAC9BF,KAAK,EAAE,QAAQ;MACfC,KAAK,EAAE;IACT,CAAC,CACF;IACDE,OAAO,EAAE,CACP;MACEhB,EAAE,EAAEnB,MAAM,CAAC,CAAC;MACZ8B,MAAM,EAAE7B,UAAU,CAACmC,OAAO;MAC1BJ,KAAK,EAAE,QAAQ;MACfC,KAAK,EAAE;IACT,CAAC,CACF;IACDI,SAAS,EAAE,CACT;MACElB,EAAE,EAAEnB,MAAM,CAAC,CAAC;MACZ8B,MAAM,EAAE7B,UAAU,CAACqC,SAAS;MAC5BN,KAAK,EAAE,QAAQ;MACfC,KAAK,EAAE;IACT,CAAC;EAEL,CAAC,CAAC;AACJ;AAACX,EAAA,CAzDQD,iBAAiB;EAAA,QAKRjB,iBAAiB,EAgB1BN,eAAe;AAAA;AAsCxB,eAAeuB,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import '../../firebaseConfig.js';\nimport 'firebase/compat/analytics';\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nimport { getAuth } from \"firebase/auth\";\nimport { useRef } from 'react';\nconst auth = getAuth();\nconst firestore = firebase.firestore();\n\n// let todo: TaskModel[] = [];\n// let inProgress = [];\n// let blocked = [];\n// let completed = [];\n\n// for (let task in kanbanRef.get()) {\n//   if (task['column'] === \"Todo\") {\n//     todo.push(task);\n//   } else if (task['column'] === \"In Progress\") {\n//     inProgress.push(task);\n//   } else if (task['column'] === \"Blocked\") {\n\n//   } else if (task['column'] === \"Completed\") {\n\n//   }\n// }\n\nconst dummy = useRef();\nconst kanbanRef = firestore.collection('tasks');\nconst query = kanbanRef.orderBy('id');\nconst taskQueryByColumn = column => kanbanRef.where('column', '==', column);\nfunction useTaskCollection() {\n\n  // return useLocalStorage<{\n  //   [key in ColumnType]: TaskModel[];\n  // }>('tasks', {\n  //   Todo: [\n  //     {\n  //       id: uuidv4(),\n  //       column: ColumnType.TO_DO,\n  //       title: 'Task 1',\n  //       color: 'blue.300',\n  //     },\n  //   ],\n  //   'In Progress': [\n  //     {\n  //       id: uuidv4(),\n  //       column: ColumnType.IN_PROGRESS,\n  //       title: 'Task 2',\n  //       color: 'yellow.300',\n  //     },\n  //   ],\n  //   Blocked: [\n  //     {\n  //       id: uuidv4(),\n  //       column: ColumnType.BLOCKED,\n  //       title: 'Task 3',\n  //       color: 'red.300',\n  //     },\n  //   ],\n  //   Completed: [\n  //     {\n  //       id: uuidv4(),\n  //       column: ColumnType.COMPLETED,\n  //       title: 'Task 4',\n  //       color: 'green.300',\n  //     },\n  //   ],\n  // });\n}\nexport default useTaskCollection;","map":{"version":3,"names":["firebase","getAuth","useRef","auth","firestore","dummy","kanbanRef","collection","query","orderBy","taskQueryByColumn","column","where","useTaskCollection"],"sources":["/Users/jason/bizchina/src/dashboard/hooks/useTaskCollection.ts"],"sourcesContent":["import { useLocalStorage } from 'usehooks-ts';\n\nimport { v4 as uuidv4 } from 'uuid';\nimport { ColumnType } from '../utils/enums.ts';\nimport { TaskModel } from '../utils/models.ts';\n\nimport '../../firebaseConfig.js';\n\nimport 'firebase/compat/analytics';\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nimport { getAuth } from \"firebase/auth\";\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport { useRef } from 'react';\n\nconst auth = getAuth();\nconst firestore = firebase.firestore();\n\n// let todo: TaskModel[] = [];\n// let inProgress = [];\n// let blocked = [];\n// let completed = [];\n\n// for (let task in kanbanRef.get()) {\n//   if (task['column'] === \"Todo\") {\n//     todo.push(task);\n//   } else if (task['column'] === \"In Progress\") {\n//     inProgress.push(task);\n//   } else if (task['column'] === \"Blocked\") {\n\n//   } else if (task['column'] === \"Completed\") {\n\n//   }\n// }\n\nconst dummy = useRef();\nconst kanbanRef = firestore.collection('tasks');\nconst query = kanbanRef.orderBy('id');\nconst taskQueryByColumn = (column) => kanbanRef.where('column', '==', column);\n\n\n\nfunction useTaskCollection() {\n  \n  // return useLocalStorage<{\n  //   [key in ColumnType]: TaskModel[];\n  // }>('tasks', {\n  //   Todo: [\n  //     {\n  //       id: uuidv4(),\n  //       column: ColumnType.TO_DO,\n  //       title: 'Task 1',\n  //       color: 'blue.300',\n  //     },\n  //   ],\n  //   'In Progress': [\n  //     {\n  //       id: uuidv4(),\n  //       column: ColumnType.IN_PROGRESS,\n  //       title: 'Task 2',\n  //       color: 'yellow.300',\n  //     },\n  //   ],\n  //   Blocked: [\n  //     {\n  //       id: uuidv4(),\n  //       column: ColumnType.BLOCKED,\n  //       title: 'Task 3',\n  //       color: 'red.300',\n  //     },\n  //   ],\n  //   Completed: [\n  //     {\n  //       id: uuidv4(),\n  //       column: ColumnType.COMPLETED,\n  //       title: 'Task 4',\n  //       color: 'green.300',\n  //     },\n  //   ],\n  // });\n}\n\nexport default useTaskCollection;\n"],"mappings":"AAMA,OAAO,yBAAyB;AAEhC,OAAO,2BAA2B;AAClC,OAAOA,QAAQ,MAAM,qBAAqB;AAC1C,OAAO,sBAAsB;AAC7B,OAAO,2BAA2B;AAElC,SAASC,OAAO,QAAQ,eAAe;AAEvC,SAASC,MAAM,QAAQ,OAAO;AAE9B,MAAMC,IAAI,GAAGF,OAAO,CAAC,CAAC;AACtB,MAAMG,SAAS,GAAGJ,QAAQ,CAACI,SAAS,CAAC,CAAC;;AAEtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,MAAMC,KAAK,GAAGH,MAAM,CAAC,CAAC;AACtB,MAAMI,SAAS,GAAGF,SAAS,CAACG,UAAU,CAAC,OAAO,CAAC;AAC/C,MAAMC,KAAK,GAAGF,SAAS,CAACG,OAAO,CAAC,IAAI,CAAC;AACrC,MAAMC,iBAAiB,GAAIC,MAAM,IAAKL,SAAS,CAACM,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAED,MAAM,CAAC;AAI7E,SAASE,iBAAiBA,CAAA,EAAG;;EAE3B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAAA;AAGF,eAAeA,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/jason/bizchina/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Route, BrowserRouter as Router, Routes } from \"react-router-dom\";\nimport './App.css';\nimport './firebaseConfig.js';\nimport 'firebase/compat/analytics';\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nimport ChatRoom from './pages/chatPage';\nimport SignIn from './pages/signInPage';\nimport MyDashboard from './pages/DashboardScreen/Dashboard.js';\nimport Dashboard from './pages/Dashboard.tsx';\nimport { getAuth } from \"firebase/auth\";\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst auth = getAuth();\nconst firestore = firebase.firestore();\nconst analytics = firebase.analytics();\nfunction App() {\n  _s();\n  const [user] = useAuthState(auth);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/chat\",\n          element: /*#__PURE__*/_jsxDEV(ChatRoom, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/mydashboard\",\n          element: /*#__PURE__*/_jsxDEV(MyDashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 57\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/dashboard\",\n          element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"hP/7NvzUIXfxIpRVjMlmHSnysKo=\", false, function () {\n  return [useAuthState];\n});\n_c = App;\nexport default App;\n\n// <div className=\"App\">\n//     <header>\n//         <h1><img src={logo} className='logo'></img></h1>\n//         <SignOut />\n//     </header>\n\n//     {/* <section>\n//         {user ? <ChatRoom /> : <SignIn />}\n//     </section> */}\n\n// </div>\n//     );\n// }\n\n// function SignIn() {\n//     const [email, setEmail] = useState(\"\");\n//     const [password, setPassword] = useState(\"\");\n//     const signInWithGoogle = () => {\n//         const provider = new firebase.auth.GoogleAuthProvider();\n//         signInWithPopup(auth, provider)\n//             .then((result) => {\n//                 // This gives you a Google Access Token. You can use it to access the Google API.\n//                 const credential = GoogleAuthProvider.credentialFromResult(result);\n//                 const token = credential.accessToken;\n//                 // The signed-in user info.\n//                 const user = result.user;\n//                 // IdP data available using getAdditionalUserInfo(result)\n//                 // ...\n//             }).catch((error) => {\n//             // Handle Errors here.\n//             const errorCode = error.code;\n//             const errorMessage = error.message;\n//             // The email of the user's account used.\n//             const email = error.customData.email;\n//             // The AuthCredential type that was used.\n//             const credential = GoogleAuthProvider.credentialFromError(error);\n//             // ...\n//         });\n//     }\n//     const signUpWithEmailAndPassword = () => {\n//         createUserWithEmailAndPassword(auth, email, password)\n//             .then((userCredential) => {\n//                 // Signed up\n//                 const user = userCredential.user;\n//                 // ...\n//             })\n//             .catch((error) => {\n//                 const errorCode = error.code;\n//                 const errorMessage = error.message;\n//                 // ..\n//             });\n\n//     };\n//     return (\n//         <div id=\"signInContainer\">\n//             <div id=\"signIn\">Sign in</div>\n//             <div id=\"manage\">Log in to start managing your tasks!</div>\n\n//             {/* Email and Password inputs */}\n//             <input\n//                 type=\"text\"\n//                 placeholder=\"Email\"\n//                 className=\"inputBox\"\n//                 value={email}\n//                 onChange={(e) => setEmail(e.target.value)}\n//             />\n//             <input\n//                 type=\"password\"\n//                 placeholder=\"Password\"\n//                 className=\"inputBox\"\n//                 value={password}\n//                 onChange={(e) => setPassword(e.target.value)}\n//             />\n\n//             {/* Sign in buttons */}\n//             <button id=\"login\" onClick={() => signUpWithEmailAndPassword(email, password)}>Login</button>\n//             <button className=\"sign-in\" onClick={signInWithGoogle}>Sign in with Google</button>\n//         </div>\n//     )\n\n// }\n\n// function SignOut() {\n//     return auth.currentUser && (\n//         <button className=\"sign-out\" onClick={() => auth.signOut()}>Sign Out</button>\n//     )\n// }\n\n// function ChatRoom() {\n//     const dummy = useRef();\n//     const messagesRef = firestore.collection('messages');\n//     const query = messagesRef.orderBy('createdAt');\n\n//     const [messages] = useCollectionData(query, { idField: 'id' });\n\n//     const [formValue, setFormValue] = useState('');\n\n//     const sendMessage = async (e) => {\n//         e.preventDefault();\n\n//         const { uid, photoURL } = auth.currentUser;\n\n//         await messagesRef.add({\n//             text: formValue,\n//             createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n//             uid,\n//             photoURL\n//         })\n\n//         setFormValue('');\n//         dummy.current.scrollIntoView({ behavior: 'smooth' });\n//     }\n\n//     return (<>\n//         <main>\n\n//             {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n\n//             <span ref={dummy}></span>\n\n//         </main>\n\n//         <form onSubmit={sendMessage}>\n\n//             <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"say something nice\" />\n\n//             <button type=\"submit\" disabled={!formValue}>üïäÔ∏è</button>\n\n//         </form>\n//     </>)\n// }\n\n// function ChatMessage(props) {\n//     const { text, uid, photoURL } = props.message;\n\n//     const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n\n//     return (<>\n//         <div className={`message ${messageClass}`}>\n//             <img src={photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'} />\n//             <p>{text}</p>\n//         </div>\n//     </>)\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Route","BrowserRouter","Router","Routes","firebase","ChatRoom","SignIn","MyDashboard","Dashboard","getAuth","useAuthState","jsxDEV","_jsxDEV","Fragment","_Fragment","auth","firestore","analytics","App","_s","user","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jason/bizchina/src/App.js"],"sourcesContent":["import React from 'react';\nimport { Route, BrowserRouter as Router, Routes } from \"react-router-dom\";\nimport './App.css';\n\nimport './firebaseConfig.js';\n\nimport 'firebase/compat/analytics';\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nimport ChatRoom from './pages/chatPage';\nimport SignIn from './pages/signInPage';\nimport MyDashboard from './pages/DashboardScreen/Dashboard.js';\nimport Dashboard from './pages/Dashboard.tsx';\n\nimport { getAuth } from \"firebase/auth\";\nimport { useAuthState } from 'react-firebase-hooks/auth';\n\n\nconst auth = getAuth();\nconst firestore = firebase.firestore();\nconst analytics = firebase.analytics();\n\n\nfunction App() {\n\n    const [user] = useAuthState(auth);\n    \n\n    return (\n        <>\n            <Router>\n                <Routes>\n                \n                    <Route path=\"/\" element={<SignIn />} /> \n                    <Route path=\"/chat\" element={<ChatRoom />} />\n                    <Route path=\"/mydashboard\" element={<MyDashboard />} />\n                    <Route path=\"/dashboard\" element={<Dashboard />} />\n                </Routes>\n            </Router>\n        </>\n    )\n}\n\nexport default App;\n\n\n        \n        // <div className=\"App\">\n        //     <header>\n        //         <h1><img src={logo} className='logo'></img></h1>\n        //         <SignOut />\n        //     </header>\n\n        //     {/* <section>\n        //         {user ? <ChatRoom /> : <SignIn />}\n        //     </section> */}\n\n        // </div>\n//     );\n// }\n\n// function SignIn() {\n//     const [email, setEmail] = useState(\"\");\n//     const [password, setPassword] = useState(\"\");\n//     const signInWithGoogle = () => {\n//         const provider = new firebase.auth.GoogleAuthProvider();\n//         signInWithPopup(auth, provider)\n//             .then((result) => {\n//                 // This gives you a Google Access Token. You can use it to access the Google API.\n//                 const credential = GoogleAuthProvider.credentialFromResult(result);\n//                 const token = credential.accessToken;\n//                 // The signed-in user info.\n//                 const user = result.user;\n//                 // IdP data available using getAdditionalUserInfo(result)\n//                 // ...\n//             }).catch((error) => {\n//             // Handle Errors here.\n//             const errorCode = error.code;\n//             const errorMessage = error.message;\n//             // The email of the user's account used.\n//             const email = error.customData.email;\n//             // The AuthCredential type that was used.\n//             const credential = GoogleAuthProvider.credentialFromError(error);\n//             // ...\n//         });\n//     }\n//     const signUpWithEmailAndPassword = () => {\n//         createUserWithEmailAndPassword(auth, email, password)\n//             .then((userCredential) => {\n//                 // Signed up\n//                 const user = userCredential.user;\n//                 // ...\n//             })\n//             .catch((error) => {\n//                 const errorCode = error.code;\n//                 const errorMessage = error.message;\n//                 // ..\n//             });\n\n//     };\n//     return (\n//         <div id=\"signInContainer\">\n//             <div id=\"signIn\">Sign in</div>\n//             <div id=\"manage\">Log in to start managing your tasks!</div>\n\n//             {/* Email and Password inputs */}\n//             <input\n//                 type=\"text\"\n//                 placeholder=\"Email\"\n//                 className=\"inputBox\"\n//                 value={email}\n//                 onChange={(e) => setEmail(e.target.value)}\n//             />\n//             <input\n//                 type=\"password\"\n//                 placeholder=\"Password\"\n//                 className=\"inputBox\"\n//                 value={password}\n//                 onChange={(e) => setPassword(e.target.value)}\n//             />\n\n//             {/* Sign in buttons */}\n//             <button id=\"login\" onClick={() => signUpWithEmailAndPassword(email, password)}>Login</button>\n//             <button className=\"sign-in\" onClick={signInWithGoogle}>Sign in with Google</button>\n//         </div>\n//     )\n\n// }\n\n// function SignOut() {\n//     return auth.currentUser && (\n//         <button className=\"sign-out\" onClick={() => auth.signOut()}>Sign Out</button>\n//     )\n// }\n\n\n// function ChatRoom() {\n//     const dummy = useRef();\n//     const messagesRef = firestore.collection('messages');\n//     const query = messagesRef.orderBy('createdAt');\n\n//     const [messages] = useCollectionData(query, { idField: 'id' });\n\n//     const [formValue, setFormValue] = useState('');\n\n\n//     const sendMessage = async (e) => {\n//         e.preventDefault();\n\n//         const { uid, photoURL } = auth.currentUser;\n\n//         await messagesRef.add({\n//             text: formValue,\n//             createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n//             uid,\n//             photoURL\n//         })\n\n//         setFormValue('');\n//         dummy.current.scrollIntoView({ behavior: 'smooth' });\n//     }\n\n//     return (<>\n//         <main>\n\n//             {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n\n//             <span ref={dummy}></span>\n\n//         </main>\n\n//         <form onSubmit={sendMessage}>\n\n//             <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"say something nice\" />\n\n//             <button type=\"submit\" disabled={!formValue}>üïäÔ∏è</button>\n\n//         </form>\n//     </>)\n// }\n\n\n// function ChatMessage(props) {\n//     const { text, uid, photoURL } = props.message;\n\n//     const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n\n//     return (<>\n//         <div className={`message ${messageClass}`}>\n//             <img src={photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'} />\n//             <p>{text}</p>\n//         </div>\n//     </>)\n// }\n\n\n// export default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
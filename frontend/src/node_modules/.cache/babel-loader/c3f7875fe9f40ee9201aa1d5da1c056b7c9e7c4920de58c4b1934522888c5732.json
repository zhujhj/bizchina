{"ast":null,"code":"// // import { Dialog, Stack, Typography, Box, IconButton } from '@mui/material'\n// // // import CloseIcon from \"@mui/icons-material/Close\";\n\n// // const CreateBoardModal = () => {\n// //     return (\n// //         <Dialog open fullWidth maxWidth='xs'>\n// //             <Stack p={2}>\n// //                 <Stack direction='row'>\n// //                     <Typography variant='h5'>Create Board</Typography>\n// //                     <IconButton size='small'>\n// //                         {/* <CloseIcon/> */}\n// //                         X\n// //                     </IconButton>\n// //                 </Stack>\n// //             </Stack>\n// //         </Dialog>\n// //     )\n// // }\n\n// // export default CreateBoardModal\n\n// import { useState } from \"react\";\n// import {\n//   Dialog,\n//   Stack,\n//   Typography,\n//   Box,\n//   TextField,\n//   Button,\n// } from \"@mui/material\";\n// import ModalHeader from \"../../components/layout/ModalHeader\";\n// import { colors } from \"../../theme\";\n// import useApp from \"../../hooks/useApp\";\n// import useStore from \"../../store\";\n\n// const CreateBoardModal = ({ closeModal }) => {\n//   const { createBoard } = useApp();\n//   const [name, setName] = useState(\"\");\n//   const [color, setColor] = useState(0);\n//   const [loading, setLoading] = useState(false);\n//   const { setToastr } = useStore();\n\n//   const handleCreate = async () => {\n//     const tName = name.trim();\n//     if (!tName) return setToastr(\"You need to enter board name\");\n//     if (!/^[a-zA-Z0-9\\s]{1,20}$/.test(tName))\n//       return setToastr(\n//         \"Board name cannot contain special characters and should not be more than 20 chars\"\n//       );\n//     try {\n//       setLoading(true);\n//       await createBoard({ name: tName, color });\n//       closeModal();\n//     } catch (err) {\n//       setLoading(false);\n//       console.log(err);\n//     }\n//   };\n\n//   return (\n//     <Dialog open onClose={closeModal} fullWidth maxWidth=\"xs\">\n//       <Stack p={2}>\n//         <ModalHeader onClose={closeModal} title=\"Create Board\" />\n//         <Stack my={5} spacing={3}>\n//           <TextField\n//             value={name}\n//             onChange={(e) => setName(e.target.value)}\n//             label=\"Board name\"\n//           />\n//           <Stack spacing={1.5} direction=\"row\">\n//             <Typography>Color: </Typography>\n\n//             {colors.map((clr, idx) => (\n//               <Box\n//                 sx={{\n//                   cursor: \"pointer\",\n//                   border: color === idx ? \"3px solid #383838\" : \"none\",\n//                   outline: `2px solid ${clr}`,\n//                 }}\n//                 onClick={() => setColor(idx)}\n//                 key={clr}\n//                 height={25}\n//                 width={25}\n//                 backgroundColor={clr}\n//                 borderRadius=\"50%\"\n//               />\n//             ))}\n//           </Stack>\n//         </Stack>\n//         <Button\n//           disabled={loading}\n//           onClick={handleCreate}\n//           variant=\"contained\"\n//           size=\"large\"\n//         >\n//           Create\n//         </Button>\n//       </Stack>\n//     </Dialog>\n//   );\n// };\n\n// export default CreateBoardModal;","map":{"version":3,"names":[],"sources":["/Users/jason/bizchina/src/pages/DashboardScreen/CreateBoardModal.js"],"sourcesContent":["// // import { Dialog, Stack, Typography, Box, IconButton } from '@mui/material'\n// // // import CloseIcon from \"@mui/icons-material/Close\";\n\n// // const CreateBoardModal = () => {\n// //     return (\n// //         <Dialog open fullWidth maxWidth='xs'>\n// //             <Stack p={2}>\n// //                 <Stack direction='row'>\n// //                     <Typography variant='h5'>Create Board</Typography>\n// //                     <IconButton size='small'>\n// //                         {/* <CloseIcon/> */}\n// //                         X\n// //                     </IconButton>\n// //                 </Stack>\n// //             </Stack>\n// //         </Dialog>\n// //     )\n// // }\n\n// // export default CreateBoardModal\n\n// import { useState } from \"react\";\n// import {\n//   Dialog,\n//   Stack,\n//   Typography,\n//   Box,\n//   TextField,\n//   Button,\n// } from \"@mui/material\";\n// import ModalHeader from \"../../components/layout/ModalHeader\";\n// import { colors } from \"../../theme\";\n// import useApp from \"../../hooks/useApp\";\n// import useStore from \"../../store\";\n\n// const CreateBoardModal = ({ closeModal }) => {\n//   const { createBoard } = useApp();\n//   const [name, setName] = useState(\"\");\n//   const [color, setColor] = useState(0);\n//   const [loading, setLoading] = useState(false);\n//   const { setToastr } = useStore();\n\n//   const handleCreate = async () => {\n//     const tName = name.trim();\n//     if (!tName) return setToastr(\"You need to enter board name\");\n//     if (!/^[a-zA-Z0-9\\s]{1,20}$/.test(tName))\n//       return setToastr(\n//         \"Board name cannot contain special characters and should not be more than 20 chars\"\n//       );\n//     try {\n//       setLoading(true);\n//       await createBoard({ name: tName, color });\n//       closeModal();\n//     } catch (err) {\n//       setLoading(false);\n//       console.log(err);\n//     }\n//   };\n\n//   return (\n//     <Dialog open onClose={closeModal} fullWidth maxWidth=\"xs\">\n//       <Stack p={2}>\n//         <ModalHeader onClose={closeModal} title=\"Create Board\" />\n//         <Stack my={5} spacing={3}>\n//           <TextField\n//             value={name}\n//             onChange={(e) => setName(e.target.value)}\n//             label=\"Board name\"\n//           />\n//           <Stack spacing={1.5} direction=\"row\">\n//             <Typography>Color: </Typography>\n\n//             {colors.map((clr, idx) => (\n//               <Box\n//                 sx={{\n//                   cursor: \"pointer\",\n//                   border: color === idx ? \"3px solid #383838\" : \"none\",\n//                   outline: `2px solid ${clr}`,\n//                 }}\n//                 onClick={() => setColor(idx)}\n//                 key={clr}\n//                 height={25}\n//                 width={25}\n//                 backgroundColor={clr}\n//                 borderRadius=\"50%\"\n//               />\n//             ))}\n//           </Stack>\n//         </Stack>\n//         <Button\n//           disabled={loading}\n//           onClick={handleCreate}\n//           variant=\"contained\"\n//           size=\"large\"\n//         >\n//           Create\n//         </Button>\n//       </Stack>\n//     </Dialog>\n//   );\n// };\n\n// export default CreateBoardModal;"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
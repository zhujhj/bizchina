{
  "version": 3,
  "sources": ["../../react-textarea-autosize/dist/react-textarea-autosize.browser.development.esm.js", "../../use-latest/dist/use-latest.esm.js", "../../use-isomorphic-layout-effect/dist/use-isomorphic-layout-effect.browser.esm.js", "../../use-composed-ref/dist/use-composed-ref.esm.js"],
  "sourcesContent": ["import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\r\nimport * as React from 'react';\r\nimport useLatest from 'use-latest';\r\nimport useComposedRef from 'use-composed-ref';\r\n\r\nvar HIDDEN_TEXTAREA_STYLE = {\r\n  'min-height': '0',\r\n  'max-height': 'none',\r\n  height: '0',\r\n  visibility: 'hidden',\r\n  overflow: 'hidden',\r\n  position: 'absolute',\r\n  'z-index': '-1000',\r\n  top: '0',\r\n  right: '0'\r\n};\r\nvar forceHiddenStyles = function forceHiddenStyles(node) {\r\n  Object.keys(HIDDEN_TEXTAREA_STYLE).forEach(function (key) {\r\n    node.style.setProperty(key, HIDDEN_TEXTAREA_STYLE[key], 'important');\r\n  });\r\n};\r\nvar forceHiddenStyles$1 = forceHiddenStyles;\r\n\r\n// TODO: use labelled tuples once they are avaiable:\r\n//   export type CalculatedNodeHeights = [height: number, rowHeight: number];\r\n// https://github.com/microsoft/TypeScript/issues/28259\r\n\r\nvar hiddenTextarea = null;\r\nvar getHeight = function getHeight(node, sizingData) {\r\n  var height = node.scrollHeight;\r\n  if (sizingData.sizingStyle.boxSizing === 'border-box') {\r\n    // border-box: add border, since height = content + padding + border\r\n    return height + sizingData.borderSize;\r\n  }\r\n\r\n  // remove padding, since height = content\r\n  return height - sizingData.paddingSize;\r\n};\r\nfunction calculateNodeHeight(sizingData, value, minRows, maxRows) {\r\n  if (minRows === void 0) {\r\n    minRows = 1;\r\n  }\r\n  if (maxRows === void 0) {\r\n    maxRows = Infinity;\r\n  }\r\n  if (!hiddenTextarea) {\r\n    hiddenTextarea = document.createElement('textarea');\r\n    hiddenTextarea.setAttribute('tabindex', '-1');\r\n    hiddenTextarea.setAttribute('aria-hidden', 'true');\r\n    forceHiddenStyles$1(hiddenTextarea);\r\n  }\r\n  if (hiddenTextarea.parentNode === null) {\r\n    document.body.appendChild(hiddenTextarea);\r\n  }\r\n  var paddingSize = sizingData.paddingSize,\r\n    borderSize = sizingData.borderSize,\r\n    sizingStyle = sizingData.sizingStyle;\r\n  var boxSizing = sizingStyle.boxSizing;\r\n  Object.keys(sizingStyle).forEach(function (_key) {\r\n    var key = _key;\r\n    hiddenTextarea.style[key] = sizingStyle[key];\r\n  });\r\n  forceHiddenStyles$1(hiddenTextarea);\r\n  hiddenTextarea.value = value;\r\n  var height = getHeight(hiddenTextarea, sizingData);\r\n  // Double set and calc due to Firefox bug: https://bugzilla.mozilla.org/show_bug.cgi?id=1795904\r\n  hiddenTextarea.value = value;\r\n  height = getHeight(hiddenTextarea, sizingData);\r\n\r\n  // measure height of a textarea with a single row\r\n  hiddenTextarea.value = 'x';\r\n  var rowHeight = hiddenTextarea.scrollHeight - paddingSize;\r\n  var minHeight = rowHeight * minRows;\r\n  if (boxSizing === 'border-box') {\r\n    minHeight = minHeight + paddingSize + borderSize;\r\n  }\r\n  height = Math.max(minHeight, height);\r\n  var maxHeight = rowHeight * maxRows;\r\n  if (boxSizing === 'border-box') {\r\n    maxHeight = maxHeight + paddingSize + borderSize;\r\n  }\r\n  height = Math.min(maxHeight, height);\r\n  return [height, rowHeight];\r\n}\r\n\r\nvar noop = function noop() {};\r\nvar pick = function pick(props, obj) {\r\n  return props.reduce(function (acc, prop) {\r\n    acc[prop] = obj[prop];\r\n    return acc;\r\n  }, {});\r\n};\r\n\r\nvar SIZING_STYLE = ['borderBottomWidth', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth', 'boxSizing', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'letterSpacing', 'lineHeight', 'paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop',\r\n// non-standard\r\n'tabSize', 'textIndent',\r\n// non-standard\r\n'textRendering', 'textTransform', 'width', 'wordBreak'];\r\nvar isIE = !!document.documentElement.currentStyle ;\r\nvar getSizingData = function getSizingData(node) {\r\n  var style = window.getComputedStyle(node);\r\n  if (style === null) {\r\n    return null;\r\n  }\r\n  var sizingStyle = pick(SIZING_STYLE, style);\r\n  var boxSizing = sizingStyle.boxSizing;\r\n\r\n  // probably node is detached from DOM, can't read computed dimensions\r\n  if (boxSizing === '') {\r\n    return null;\r\n  }\r\n\r\n  // IE (Edge has already correct behaviour) returns content width as computed width\r\n  // so we need to add manually padding and border widths\r\n  if (isIE && boxSizing === 'border-box') {\r\n    sizingStyle.width = parseFloat(sizingStyle.width) + parseFloat(sizingStyle.borderRightWidth) + parseFloat(sizingStyle.borderLeftWidth) + parseFloat(sizingStyle.paddingRight) + parseFloat(sizingStyle.paddingLeft) + 'px';\r\n  }\r\n  var paddingSize = parseFloat(sizingStyle.paddingBottom) + parseFloat(sizingStyle.paddingTop);\r\n  var borderSize = parseFloat(sizingStyle.borderBottomWidth) + parseFloat(sizingStyle.borderTopWidth);\r\n  return {\r\n    sizingStyle: sizingStyle,\r\n    paddingSize: paddingSize,\r\n    borderSize: borderSize\r\n  };\r\n};\r\nvar getSizingData$1 = getSizingData;\r\n\r\nfunction useListener(target, type, listener) {\r\n  var latestListener = useLatest(listener);\r\n  React.useLayoutEffect(function () {\r\n    var handler = function handler(ev) {\r\n      return latestListener.current(ev);\r\n    };\r\n\r\n    // might happen if document.fonts is not defined, for instance\r\n    if (!target) {\r\n      return;\r\n    }\r\n    target.addEventListener(type, handler);\r\n    return function () {\r\n      return target.removeEventListener(type, handler);\r\n    };\r\n  }, []);\r\n}\r\nvar useWindowResizeListener = function useWindowResizeListener(listener) {\r\n  useListener(window, 'resize', listener);\r\n};\r\nvar useFontsLoadedListener = function useFontsLoadedListener(listener) {\r\n  useListener(document.fonts, 'loadingdone', listener);\r\n};\r\n\r\nvar _excluded = [\"cacheMeasurements\", \"maxRows\", \"minRows\", \"onChange\", \"onHeightChange\"];\r\nvar TextareaAutosize = function TextareaAutosize(_ref, userRef) {\r\n  var cacheMeasurements = _ref.cacheMeasurements,\r\n    maxRows = _ref.maxRows,\r\n    minRows = _ref.minRows,\r\n    _ref$onChange = _ref.onChange,\r\n    onChange = _ref$onChange === void 0 ? noop : _ref$onChange,\r\n    _ref$onHeightChange = _ref.onHeightChange,\r\n    onHeightChange = _ref$onHeightChange === void 0 ? noop : _ref$onHeightChange,\r\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\r\n  if (props.style) {\r\n    if ('maxHeight' in props.style) {\r\n      throw new Error('Using `style.maxHeight` for <TextareaAutosize/> is not supported. Please use `maxRows`.');\r\n    }\r\n    if ('minHeight' in props.style) {\r\n      throw new Error('Using `style.minHeight` for <TextareaAutosize/> is not supported. Please use `minRows`.');\r\n    }\r\n  }\r\n  var isControlled = props.value !== undefined;\r\n  var libRef = React.useRef(null);\r\n  var ref = useComposedRef(libRef, userRef);\r\n  var heightRef = React.useRef(0);\r\n  var measurementsCacheRef = React.useRef();\r\n  var resizeTextarea = function resizeTextarea() {\r\n    var node = libRef.current;\r\n    var nodeSizingData = cacheMeasurements && measurementsCacheRef.current ? measurementsCacheRef.current : getSizingData$1(node);\r\n    if (!nodeSizingData) {\r\n      return;\r\n    }\r\n    measurementsCacheRef.current = nodeSizingData;\r\n    var _calculateNodeHeight = calculateNodeHeight(nodeSizingData, node.value || node.placeholder || 'x', minRows, maxRows),\r\n      height = _calculateNodeHeight[0],\r\n      rowHeight = _calculateNodeHeight[1];\r\n    if (heightRef.current !== height) {\r\n      heightRef.current = height;\r\n      node.style.setProperty('height', height + \"px\", 'important');\r\n      onHeightChange(height, {\r\n        rowHeight: rowHeight\r\n      });\r\n    }\r\n  };\r\n  var handleChange = function handleChange(event) {\r\n    if (!isControlled) {\r\n      resizeTextarea();\r\n    }\r\n    onChange(event);\r\n  };\r\n  {\r\n    React.useLayoutEffect(resizeTextarea);\r\n    useWindowResizeListener(resizeTextarea);\r\n    useFontsLoadedListener(resizeTextarea);\r\n    return /*#__PURE__*/React.createElement(\"textarea\", _extends({}, props, {\r\n      onChange: handleChange,\r\n      ref: ref\r\n    }));\r\n  }\r\n};\r\nvar index = /* #__PURE__ */React.forwardRef(TextareaAutosize);\r\n\r\nexport { index as default };\r\n", "import * as React from 'react';\r\nimport useIsomorphicLayoutEffect from 'use-isomorphic-layout-effect';\r\n\r\nvar useLatest = function useLatest(value) {\r\n  var ref = React.useRef(value);\r\n  useIsomorphicLayoutEffect(function () {\r\n    ref.current = value;\r\n  });\r\n  return ref;\r\n};\r\n\r\nexport { useLatest as default };\r\n", "import { useLayoutEffect } from 'react';\r\n\r\nvar index =  useLayoutEffect ;\r\n\r\nexport default index;\r\n", "import { useRef, useCallback } from 'react';\r\n\r\nvar updateRef = function updateRef(ref, value) {\r\n  if (typeof ref === 'function') {\r\n    ref(value);\r\n    return;\r\n  }\r\n  ref.current = value;\r\n};\r\n\r\nvar useComposedRef = function useComposedRef(libRef, userRef) {\r\n  var prevUserRef = useRef();\r\n  return useCallback(function (instance) {\r\n    libRef.current = instance;\r\n\r\n    if (prevUserRef.current) {\r\n      updateRef(prevUserRef.current, null);\r\n    }\r\n\r\n    prevUserRef.current = userRef;\r\n\r\n    if (!userRef) {\r\n      return;\r\n    }\r\n\r\n    updateRef(userRef, instance);\r\n  }, [userRef]);\r\n};\r\n\r\nexport default useComposedRef;\r\n"],
  "mappings": "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",
  "names": ["React", "useLatest", "import_react", "updateRef", "useComposedRef", "forceHiddenStyles", "getHeight", "noop", "pick", "getSizingData", "handler", "useWindowResizeListener", "useFontsLoadedListener", "TextareaAutosize", "resizeTextarea", "handleChange", "index"]
}
